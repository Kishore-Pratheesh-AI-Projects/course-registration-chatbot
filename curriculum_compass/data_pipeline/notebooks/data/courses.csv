CRN,Campus Description,Course Title,Subject Course,Faculty Name,Course Description,Term,Begin Time,End Time,Days,Prerequisites
34154,Online,Computer Science and Its Applications,CS1100,"Lieberherr, Karl",Introduces students to the field of computer science and the patterns of thinking that enable them to become intelligent users of software tools in a problem-solving setting. Examines several important software applications so that students may develop the skills necessary to use computers effectively in their own disciplines.,Spring 2025,,,,[]
32828,Boston,Lab for CS 1100,CS1101,"Lieberherr, Karl",Accompanies CS 1100. Involves experiments and problem solving across multiple disciplines using computer science techniques and tools.,Spring 2025,0800,0905,Friday,[]
32829,Boston,Lab for CS 1100,CS1101,"Lieberherr, Karl",Accompanies CS 1100. Involves experiments and problem solving across multiple disciplines using computer science techniques and tools.,Spring 2025,0915,1020,Friday,[]
32830,Boston,Lab for CS 1100,CS1101,"Lieberherr, Karl",Accompanies CS 1100. Involves experiments and problem solving across multiple disciplines using computer science techniques and tools.,Spring 2025,1030,1135,Friday,[]
34155,Online,First Year Seminar,CS1200,"Wassinger, Claire","Seeks to support students in their transition to Northeastern and in their holistic development as they become responsible members of the college and university communities. Incorporates large group discussion, small group activities, and self-reflection in order to facilitate connections with faculty, staff, and peers; promote utilization of appropriate campus resources; and assist with academic and personal goal setting.",Spring 2025,,,,[]
34157,Online,Professional Development for Khoury Co-op,CS1210,"Bishnoi, Priyanka","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
35407,Online,Professional Development for Khoury Co-op,CS1210,"Albanese, David","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1450,1555,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
30307,Boston,Discrete Structures,CS1800,"Hamlin, Ariel","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Discusses principles of proof such as truth tables, inductive proof, and basic logic. Also covers the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms.",Spring 2025,0950,1130,"Tuesday, Friday",[]
34586,Boston,Discrete Structures,CS1800,"Hamlin, Ariel","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Discusses principles of proof such as truth tables, inductive proof, and basic logic. Also covers the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms.",Spring 2025,1335,1515,"Tuesday, Friday",[]
40823,Online,Discrete Structures,CS1800,"Aloupis, Gregory","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Discusses principles of proof such as truth tables, inductive proof, and basic logic. Also covers the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms.",Spring 2025,,,,[]
32215,Boston,Seminar for CS 1800,CS1802,"Amor-Tijani, Ghita","Accompanies CS 1800. Illustrates topics from the lecture course through discussions, quizzes, and homework assignments.",Spring 2025,0915,1020,Wednesday,[]
35868,Boston,Seminar for CS 1800,CS1802,"Amor-Tijani, Ghita","Accompanies CS 1800. Illustrates topics from the lecture course through discussions, quizzes, and homework assignments.",Spring 2025,1030,1135,Wednesday,[]
37024,Boston,Seminar for CS 1800,CS1802,"Amor-Tijani, Ghita","Accompanies CS 1800. Illustrates topics from the lecture course through discussions, quizzes, and homework assignments.",Spring 2025,0915,1020,Thursday,[]
39788,Boston,Seminar for CS 1800,CS1802,"Amor-Tijani, Ghita","Accompanies CS 1800. Illustrates topics from the lecture course through discussions, quizzes, and homework assignments.",Spring 2025,1030,1135,Thursday,[]
40824,Online,Seminar for CS 1800,CS1802,"Aloupis, Gregory","Accompanies CS 1800. Illustrates topics from the lecture course through discussions, quizzes, and homework assignments.",Spring 2025,1525,1630,Tuesday,[]
30306,Online,Professional Development for Khoury Co-op,CS1210,"Schwab, Garrett","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1030,1135,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
30305,Online,Professional Development for Khoury Co-op,CS1210,"Hill, Victoria","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
31565,Online,Professional Development for Khoury Co-op,CS1210,"Dell, Sara","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
31721,Online,Professional Development for Khoury Co-op,CS1210,"Rosenberg, Lauren","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
32214,Online,Professional Development for Khoury Co-op,CS1210,"Abdulle, Anis","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
32831,Online,Professional Development for Khoury Co-op,CS1210,"Ballantyne, Jordan","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1525,1630,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
33264,Online,Professional Development for Khoury Co-op,CS1210,"Wilkerson, Heather","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1525,1630,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
33607,Online,Professional Development for Khoury Co-op,CS1210,"Haycook, Charles","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1335,1440,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
33608,Online,Professional Development for Khoury Co-op,CS1210,"Starzec, Amy","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1145,1250,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
34156,Online,Professional Development for Khoury Co-op,CS1210,"Mauristhene, Ernest","Continues the preparation of students for careers in the computing and information fields by discussing co-op and co-op processes. Offers students an opportunity to prepare a professional resumé; practice proper interviewing techniques; explore current job opportunities; learn how to engage in the job and referral process; and to understand co-op policies, procedures, and expectations. Discusses professional behavior and ethical issues in the workplace.",Spring 2025,1145,1250,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
34159,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Friday,[]
34160,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Friday,[]
32105,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1335,1515,Friday,[]
32106,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1335,1515,Friday,[]
32832,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1525,1705,Friday,[]
34158,Boston,Fundamentals of Computer Science 1,CS2500,"Park, John","Introduces the fundamental ideas of computing and the principles of programming. Discusses a systematic approach to word problems, including analytic reading, synthesis, goal setting, planning, plan execution, and testing. Presents several models of computing, starting from nothing more than expression evaluation in the spirit of high school algebra. Assumes no prior programming experience; therefore, suitable for first-year students—majors, and nonmajors alike—who wish to explore the intellectual ideas in the discipline.",Spring 2025,0915,1020,"Monday, Wednesday, Thursday",[]
31296,Boston,Fundamentals of Computer Science 1,CS2500,"Park, John","Introduces the fundamental ideas of computing and the principles of programming. Discusses a systematic approach to word problems, including analytic reading, synthesis, goal setting, planning, plan execution, and testing. Presents several models of computing, starting from nothing more than expression evaluation in the spirit of high school algebra. Assumes no prior programming experience; therefore, suitable for first-year students—majors, and nonmajors alike—who wish to explore the intellectual ideas in the discipline.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday",[]
39789,Boston,Fundamentals of Computer Science 1,CS2500,"Park, John","Introduces the fundamental ideas of computing and the principles of programming. Discusses a systematic approach to word problems, including analytic reading, synthesis, goal setting, planning, plan execution, and testing. Presents several models of computing, starting from nothing more than expression evaluation in the spirit of high school algebra. Assumes no prior programming experience; therefore, suitable for first-year students—majors, and nonmajors alike—who wish to explore the intellectual ideas in the discipline.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday",[]
30215,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,0800,0940,Friday,[]
31220,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,0950,1130,Friday,[]
34161,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,1525,1705,Friday,[]
39790,Boston,Lab for CS 2500,CS2501,"Park, John",Accompanies CS 2500. Covers topics from the course through various experiments.,Spring 2025,0800,0940,Friday,[]
30194,Boston,Fundamentals of Computer Science 2,CS2510,"Lerner, Benjamin","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
30193,Boston,Fundamentals of Computer Science 2,CS2510,"Razzaq, Leena","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,0915,1020,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
31825,Boston,Fundamentals of Computer Science 2,CS2510,"Sloan, Rose","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
34162,Boston,Fundamentals of Computer Science 2,CS2510,"Razzaq, Leena","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
31975,Boston,Fundamentals of Computer Science 2,CS2510,"Sloan, Rose","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
37169,"Oakland, CA",Fundamentals of Computer Science 2,CS2510,"Bhalerao, Rasika","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1035,1140,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
37121,"Oakland, CA",Fundamentals of Computer Science 2,CS2510,"Spertus, Ellen","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1035,1140,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
37167,"Oakland, CA",Fundamentals of Computer Science 2,CS2510,"Spertus, Ellen","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
37168,"Oakland, CA",Fundamentals of Computer Science 2,CS2510,"Bhalerao, Rasika","Continues CS 2500. Examines object-oriented programming and associated algorithms using more complex data structures as the focus. Discusses nested structures and nonlinear structures including hash tables, trees, and graphs. Emphasizes abstraction, encapsulation, inheritance, polymorphism, recursion, and object-oriented design patterns. Applies these ideas to sample applications that illustrate the breadth of computer science.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
34165,Boston,Lab for CS 2510,CS2511,"Lerner, Benjamin",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0950,1130,Friday,[]
30188,Boston,Lab for CS 2510,CS2511,"Lerner, Benjamin",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Friday,[]
34166,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0800,0940,Tuesday,[]
30989,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0800,0940,Tuesday,[]
34167,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Tuesday,[]
34168,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1335,1515,Tuesday,[]
33265,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1335,1515,Tuesday,[]
34169,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1335,1515,Tuesday,[]
34171,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1525,1705,Tuesday,[]
34172,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1715,1855,Tuesday,[]
37175,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1500,1640,Thursday,[]
37176,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1650,1830,Thursday,[]
37177,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1035,1215,Friday,[]
37178,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1035,1215,Friday,[]
31566,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0950,1130,Tuesday,[]
31567,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0950,1130,Tuesday,[]
31976,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,0950,1130,Tuesday,[]
31977,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Tuesday,[]
32217,Boston,Lab for CS 2510,CS2511,"Razzaq, Leena",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1145,1325,Tuesday,[]
37179,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1225,1405,Friday,[]
37180,"Oakland, CA",Lab for CS 2510,CS2511,"Bhalerao, Rasika",Accompanies CS 2510. Covers topics from the course through various experiments.,Spring 2025,1225,1405,Friday,[]
35411,Boston,Logic and Computation,CS2800,"Patterson, Daniel","Introduces formal logic and its connections to computer and information science. Offers an opportunity to learn to translate statements about the behavior of computer programs into logical claims and to gain the ability to prove such assertions both by hand and using automated tools. Considers approaches to proving termination, correctness, and safety for programs. Discusses notations used in logic, propositional and first order logic, logical inference, mathematical induction, and structural induction. Introduces the use of logic for modeling the range of artifacts and phenomena that arise in computer and information science.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '1365'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '2310'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '2500'}]"
39791,Boston,Logic and Computation,CS2800,"Vesely, Ferdinand","Introduces formal logic and its connections to computer and information science. Offers an opportunity to learn to translate statements about the behavior of computer programs into logical claims and to gain the ability to prove such assertions both by hand and using automated tools. Considers approaches to proving termination, correctness, and safety for programs. Discusses notations used in logic, propositional and first order logic, logical inference, mathematical induction, and structural induction. Introduces the use of logic for modeling the range of artifacts and phenomena that arise in computer and information science.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '1365'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '2310'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '2500'}]"
39792,Boston,Logic and Computation,CS2800,"Gancher, Joshua","Introduces formal logic and its connections to computer and information science. Offers an opportunity to learn to translate statements about the behavior of computer programs into logical claims and to gain the ability to prove such assertions both by hand and using automated tools. Considers approaches to proving termination, correctness, and safety for programs. Discusses notations used in logic, propositional and first order logic, logical inference, mathematical induction, and structural induction. Introduces the use of logic for modeling the range of artifacts and phenomena that arise in computer and information science.",Spring 2025,1635,1740,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '1365'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '2310'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '2500'}]"
32496,Boston,Algorithms and Data,CS3000,"Nguyen, Huy","Introduces the basic principles and techniques for the design, analysis, and implementation of efficient algorithms and data representations. Discusses asymptotic analysis and formal methods for establishing the correctness of algorithms. Considers divide-and-conquer algorithms, graph traversal algorithms, and optimization techniques. Introduces information theory and covers the fundamental structures for representing data. Examines flat and hierarchical representations, dynamic data representations, and data compression. Concludes with a discussion of the relationship of the topics in this course to complexity theory and the notion of the hardness of problems.",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': '', 'course_number': ''}, {'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
34176,Boston,Algorithms and Data,CS3000,"Varma, Akshar","Introduces the basic principles and techniques for the design, analysis, and implementation of efficient algorithms and data representations. Discusses asymptotic analysis and formal methods for establishing the correctness of algorithms. Considers divide-and-conquer algorithms, graph traversal algorithms, and optimization techniques. Introduces information theory and covers the fundamental structures for representing data. Examines flat and hierarchical representations, dynamic data representations, and data compression. Concludes with a discussion of the relationship of the topics in this course to complexity theory and the notion of the hardness of problems.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': '', 'course_number': ''}, {'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
41607,Boston,Algorithms and Data,CS3000,"Sundaram, Ravi","Introduces the basic principles and techniques for the design, analysis, and implementation of efficient algorithms and data representations. Discusses asymptotic analysis and formal methods for establishing the correctness of algorithms. Considers divide-and-conquer algorithms, graph traversal algorithms, and optimization techniques. Introduces information theory and covers the fundamental structures for representing data. Examines flat and hierarchical representations, dynamic data representations, and data compression. Concludes with a discussion of the relationship of the topics in this course to complexity theory and the notion of the hardness of problems.",Spring 2025,0800,0940,"Tuesday, Friday","[{'and_or': '', 'subject': '', 'course_number': ''}, {'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '1800'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
33266,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,0800,0905,Thursday,[]
33267,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,0800,0905,Thursday,[]
33268,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,0915,1020,Thursday,[]
33269,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,0915,1020,Thursday,[]
33270,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,1030,1135,Thursday,[]
33271,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,1030,1135,Thursday,[]
35413,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,1145,1250,Thursday,[]
31724,Boston,Object-Oriented Design,CS3500,"Nunez, Lucia","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, meta-class, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse: forwarding vs. delegation and subclassing vs. subtyping. Fosters a deeper understanding of the principles of object-oriented programming and design including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Basic concepts in object-oriented design are illustrated with case studies in application frameworks and by writing programs in one or more object-oriented languages.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
34177,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,0800,0940,Monday,[]
34178,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,0800,0940,Monday,[]
34179,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,0950,1130,Monday,[]
34180,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,1525,1705,Monday,[]
35414,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,1145,1250,Thursday,[]
41608,Boston,Recitation for CS 3000,CS3001,"Nguyen, Huy",Accompanies CS 3000. Provides students with additional opportunities to ask questions and engage with course material.,Spring 2025,0800,0905,Thursday,[]
30292,Boston,Introduction to Databases,CS3200,"Gatterbauer, Wolfgang","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
31978,Online,Introduction to Databases,CS3200,"Rachlin, John","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
37173,Online,Introduction to Databases,CS3200,"Rachlin, John","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
37174,"Oakland, CA",Introduction to Databases,CS3200,"Bayat, Akram","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,0845,1025,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
39793,"Oakland, CA",Introduction to Databases,CS3200,"Monge, Alvaro","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,1500,1640,"Tuesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
40194,Online,Introduction to Databases,CS3200,"Ithier, Carter","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
41222,Boston,Introduction to Databases,CS3200,"Fontenot, Mark","Studies the design of a database for use in a relational database management system. The entity-relationship model and normalization are used in problems. Relational algebra and then the SQL (structured query language) are presented. Advanced topics include triggers, stored procedures, indexing, elementary query optimization, and fundamentals of concurrency and recovery. Students implement a database schema and short application programs on one or more commercial relational database management systems.",Spring 2025,0800,0905,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2000'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
30304,Boston,Object-Oriented Design,CS3500,"Nunez, Lucia","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, meta-class, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse: forwarding vs. delegation and subclassing vs. subtyping. Fosters a deeper understanding of the principles of object-oriented programming and design including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Basic concepts in object-oriented design are illustrated with case studies in application frameworks and by writing programs in one or more object-oriented languages.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
34181,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,1525,1705,Monday,[]
37027,Boston,Lab for CS 3500,CS3501,"Nunez, Lucia",Accompanies CS 3500. Covers topics from the course and provides students with additional opportunities to engage with course material.,Spring 2025,1715,1855,Monday,[]
31979,Boston,Programming in C++,CS3520,"Cooper, Seth","Examines how to program in C++ in a robust and safe manner. Reviews basics, including scoping, typing, and primitive data structures. Discusses data types (primitive, array, structure, class, string); addressing/parameter mechanisms (value, pointer, reference); stacks; queues; linked lists; binary trees; hash tables; and the design of classes and class inheritance, emphasizing single inheritance. Considers the instantiation of objects, the trade-offs of stack vs. heap allocation, and the design of constructors and destructors. Emphasizes the need for a strategy for dynamic memory management. Addresses function and operator overloading; templates, the Standard Template Library (STL), and the STL components (containers, generic algorithms, iterators, adaptors, allocators, function objects); streams; exception handling; and system calls for processes and threads.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '2500'}]"
31297,Online,Game Programming,CS3540,"Yildirim, Caglar","Introduces the different subsystems used to create a 3D game, including rendering, animation, collision, physics, audio, trigger systems, game logic, behavior trees, and simple artificial intelligence. Offers students an opportunity to learn the inner workings of game engines and how to use multiple libraries such as physics and graphics libraries to develop a game. Discusses graphics pipeline, scene graph, level design, behavior scripting, object-oriented game design, world editors, and game scripting languages.",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Art - Design', 'course_number': '2260'}, {'and_or': 'Or', 'subject': 'Art - Design', 'course_number': '2262'}]"
37028,Boston,Building Extensible Systems,CS3620,"Ballantyne, Michael","Deals with the design of extensible software systems, which enable clients to add functionality both statically as well as dynamically. Examples of such systems are operating systems, game servers, and Web browsers. Describes the classic systems built on C-like languages with unsafe, manual memory control and the more recent systems built on Java-like languages with safe, automated memory management. Introduces the Rust programming language, which combines the efficiency of C with safe manual memory control via type specifications and compiler constraints. Offers students an opportunity to build systems using all three settings but focuses on the Rust approach. Students also have an opportunity to evaluate their work via essays and memos.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'And', 'subject': 'English Writing', 'course_number': '1111'}, {'and_or': 'Or', 'subject': 'English Writing', 'course_number': '1102'}, {'and_or': 'Or', 'subject': 'English', 'course_number': '1111'}, {'and_or': 'Or', 'subject': 'English', 'course_number': '1102'}]"
32218,Boston,Computer Systems,CS3650,"Vesely, Ferdinand","Introduces the basic design of computing systems, computer operating systems, and assembly language using a RISC architecture. Describes caches and virtual memory. Covers the interface between assembly language and high-level languages, including call frames and pointers. Covers the use of system calls and systems programming to show the interaction with the operating system. Covers the basic structures of an operating system, including application interfaces, processes, threads, synchronization, interprocess communication, deadlock, memory management, file systems, and input/output control.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
32219,Boston,Computer Systems,CS3650,"Vesely, Ferdinand","Introduces the basic design of computing systems, computer operating systems, and assembly language using a RISC architecture. Describes caches and virtual memory. Covers the interface between assembly language and high-level languages, including call frames and pointers. Covers the use of system calls and systems programming to show the interaction with the operating system. Covers the basic structures of an operating system, including application interfaces, processes, threads, synchronization, interprocess communication, deadlock, memory management, file systems, and input/output control.",Spring 2025,1635,1740,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
32834,Boston,Computer Systems,CS3650,"Desnoyers, Peter","Introduces the basic design of computing systems, computer operating systems, and assembly language using a RISC architecture. Describes caches and virtual memory. Covers the interface between assembly language and high-level languages, including call frames and pointers. Covers the use of system calls and systems programming to show the interaction with the operating system. Covers the basic structures of an operating system, including application interfaces, processes, threads, synchronization, interprocess communication, deadlock, memory management, file systems, and input/output control.",Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
39794,Boston,Computer Systems,CS3650,"Cooperman, Gene","Introduces the basic design of computing systems, computer operating systems, and assembly language using a RISC architecture. Describes caches and virtual memory. Covers the interface between assembly language and high-level languages, including call frames and pointers. Covers the use of system calls and systems programming to show the interaction with the operating system. Covers the basic structures of an operating system, including application interfaces, processes, threads, synchronization, interprocess communication, deadlock, memory management, file systems, and input/output control.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}]"
30303,Boston,Theory of Computation,CS3800,"Walters, Robin","Introduces the theory behind computers and computing aimed at answering the question, &#8220;What are the capabilities and limitations of computers?&#8221; Covers automata theory, computability, and complexity. The automata theory portion includes finite automata, regular expressions, nondeterminism, nonregular languages, context-free languages, pushdown automata, and noncontext-free languages. The computability portion includes Turing machines, the Church-Turing thesis, decidable languages, and the Halting theorem. The complexity portion includes big-O and small-o notation, the classes P and NP, the P vs. NP question, and NP-completeness.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
39797,Boston,Artificial Intelligence,CS4100,"Amato, Christopher","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Includes heuristic search; knowledge representation using predicate calculus; automated deduction and its applications; planning; and machine learning. Additional topics include game playing; uncertain reasoning and expert systems; natural language processing; logic for common-sense reasoning; ontologies; and multiagent systems.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
35416,Boston,Natural Language Processing,CS4120,"Muzny, Felix","Introduces the computational modeling of human language; the ongoing effort to create computer programs that can communicate with people in natural language; and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpora, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models and implementation of working programs that analyze and interpret natural language text. Knowledge of statistics is helpful.",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
40232,Boston,Game Artificial Intelligence,CS4150,"Isla, Damian","Offers an overview of classical and modern approaches to artificial intelligence in digital games. Focuses on the creation of believable agents and environments with the goal of providing a fun and engaging experience to a player. Covers player modeling, procedural content generation, behavior trees, interactive narrative, decision-making systems, cognitive modeling, and path planning. Explores different approaches for behavior generation, including learning and rule-based systems. Requires students to complete several individual assignments in these areas to apply the concepts covered in class. Students choose a group final project to explore one aspect of artificial intelligence for games in further depth. Offers students an opportunity to learn team management and communication. Students who do not meet course prerequisites may seek permission of instructor.",Spring 2025,1800,2120,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3520'}]"
37029,Boston,Reinforcement Learning,CS4180,"Platt, Robert","Introduces reinforcement learning and the Markov decision process (MDP) framework. Covers methods for planning and learning in MDPs such as dynamic programming, model-based methods, and model-free methods. Examines commonly used representations including deep-learning representations. Students are expected to have a working knowledge of probability, to complete programming assignments, and to complete a course project that applies some form of reinforcement learning to a problem of interest.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'And', 'subject': 'Economics', 'course_number': '2350'}, {'and_or': 'Or', 'subject': 'Earth & Environmental Sciences', 'course_number': '2500'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '3081'}, {'and_or': 'Or', 'subject': 'Psychology', 'course_number': '2320'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '2810'}, {'and_or': 'And', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '2810'}]"
38532,Boston,Computer Graphics,CS4300,"Shesh, Amit","Charts a path through every major aspect of computer graphics with varying degrees of emphasis. Discusses hardware issues: size and speed; lines, polygons, and regions; modeling, or objects and their relations; viewing, or what can be seen (visibility and perspective); rendering, or how it looks (properties of surfaces, light, and color); transformations, or moving, placing, distorting, and animating and interaction, or drawing, selecting, and transforming.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2560'}, {'and_or': 'And', 'subject': 'Mathematics', 'course_number': '1260'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': 'Mathematics', 'course_number': '2341'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '2810'}]"
30291,Boston,Programming Languages,CS4400,"Holtzen, Steven","Introduces a systematic approach to understanding the behavior of programming languages. Covers interpreters; static and dynamic scope; environments; binding and assignment; functions and recursion; parameter-passing and method dispatch; objects, classes, inheritance, and polymorphism; type rules and type checking; and concurrency.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '4800'}]"
37030,Boston,Programming Languages,CS4400,"Barzilay, Eliyahu","Introduces a systematic approach to understanding the behavior of programming languages. Covers interpreters; static and dynamic scope; environments; binding and assignment; functions and recursion; parameter-passing and method dispatch; objects, classes, inheritance, and polymorphism; type rules and type checking; and concurrency.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '4800'}]"
31723,Boston,Compilers,CS4410,"Lerner, Benjamin","Studies the construction of compilers and integrates material from earlier courses on programming languages, automata theory, computer architecture, and software design. Examines syntax trees; static semantics; type checking; typical machine architectures and their software structures; code generation; lexical analysis; and parsing techniques. Uses a hands-on approach with a substantial term project.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '4400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7400'}]"
37101,Online,Mobile Application Development,CS4520,"Bulchandani, Ashish","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
33272,Boston,Fundamentals of Software Engineering,CS4530,"Bhutta, Adeel","Covers the fundamentals of software engineering, including software development life cycle models (e.g., waterfall, spiral,agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project in which some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
34183,Boston,Fundamentals of Software Engineering,CS4530,"Bhutta, Adeel","Covers the fundamentals of software engineering, including software development life cycle models (e.g., waterfall, spiral,agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project in which some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting.",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
34184,Boston,Fundamentals of Software Engineering,CS4530,"Bhutta, Adeel","Covers the fundamentals of software engineering, including software development life cycle models (e.g., waterfall, spiral,agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project in which some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting.",Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
37239,Online,Fundamentals of Software Engineering,CS4530,"Wand, Mitchell","Covers the fundamentals of software engineering, including software development life cycle models (e.g., waterfall, spiral,agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project in which some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting.",Spring 2025,1800,2120,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
41345,Boston,Fundamentals of Software Engineering,CS4530,"Bhutta, Adeel","Covers the fundamentals of software engineering, including software development life cycle models (e.g., waterfall, spiral,agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project in which some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
37031,Online,Web Development,CS4550,"Annunziato, Jose","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Requires each student to deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work as a team with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
39795,Boston,Theory of Computation,CS3800,"Jin, Zhengzhong","Introduces the theory behind computers and computing aimed at answering the question, &#8220;What are the capabilities and limitations of computers?&#8221; Covers automata theory, computability, and complexity. The automata theory portion includes finite automata, regular expressions, nondeterminism, nonregular languages, context-free languages, pushdown automata, and noncontext-free languages. The computability portion includes Turing machines, the Church-Turing thesis, decidable languages, and the Halting theorem. The complexity portion includes big-O and small-o notation, the classes P and NP, the P vs. NP question, and NP-completeness.",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
40109,Online,Theory of Computation,CS3800,"Schnyder, Walter","Introduces the theory behind computers and computing aimed at answering the question, &#8220;What are the capabilities and limitations of computers?&#8221; Covers automata theory, computability, and complexity. The automata theory portion includes finite automata, regular expressions, nondeterminism, nonregular languages, context-free languages, pushdown automata, and noncontext-free languages. The computability portion includes Turing machines, the Church-Turing thesis, decidable languages, and the Halting theorem. The complexity portion includes big-O and small-o notation, the classes P and NP, the P vs. NP question, and NP-completeness.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2510'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '2160'}]"
32497,Boston,Introduction to Computer Science Research,CS3950,"Hamlin, Ariel","Introduces students to research in the fields of computer science, information science, data science, and cybersecurity. Explores how the scientific method is applied to these fields and covers the breadth of subareas of specialty that exist. Offers students an opportunity to practice how to locate and read scientific literature in different subareas. Also offers students an overview of graduate education in these fields.",Spring 2025,1450,1630,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '2500'}]"
39796,Boston,Artificial Intelligence and Society,CS4050,"Fazel-pour, Sina",Examines the societal impact of artificial intelligence technologies and prominent strategies for aligning these impacts with social and ethical values. Offers multidisciplinary readings to provide conceptual lenses for understanding these technologies in their contexts of use.,Spring 2025,1450,1630,"Monday, Wednesday",[]
30174,Online,Artificial Intelligence,CS4100,"Wong, Lok Sang","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Includes heuristic search; knowledge representation using predicate calculus; automated deduction and its applications; planning; and machine learning. Additional topics include game playing; uncertain reasoning and expert systems; natural language processing; logic for common-sense reasoning; ontologies; and multiagent systems.",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
35471,Online,Building Game Engines,CS4850,"Sajnovsky, Ryon","Discusses the components of game engines and strategies for their software implementation. Includes graphics management algorithms (animation, scene graph, level of detail); basic artificial intelligence algorithms (search, decision making, sensing); and related algorithmic issues (networking, threading, input processing). Explores the use of data-driven software design. Offers students an opportunity to use a rendering engine and to build and integrate several software components to create a complete game engine. Requires students to work on several individual assignments to apply the algorithms and then develop a project in a team. Offers students an opportunity to learn team/project management; work division; team communication; and the software development cycle of implementation, testing, critique, and further iteration. Students who do not meet course prerequisites may seek permission of instructor.",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3520'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3540'}]"
37240,Boston,Network Analysis,CS4973,"Venkatesaramani, Rajagopal","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: This course explores network analysis, a cross-disciplinary field that studies the structure and dynamics of complex systems. The course will cover the mathematical concepts of graph theory, including the study of network structure, information flow dynamics and the processes through which we model the evolution of networks over time. The course will also introduce students to state-of-the-art tools and software used for network analysis, with a focus on efficiently processing very large graphs. The syllabus covers: Graph theory & mathematical modeling Network measures Graph algorithms, proofs based on network structure Information propagation - ranking algorithms, epidemic models, viral marketing Community detection, and clustering algorithms Practical considerations - working with large graphs, efficient frameworks, and visualizations Experience with Python recommended.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'And', 'subject': 'Mathematics', 'course_number': '2331'}]"
37246,Boston,Engineering LLM-integrated Sys,CS4973,"Guha, Arjun","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: Generative AI has raised our expectations of what is possible with software. The previous generation of AI assistants had a narrow set of skills and limited fluency in natural language. However, recent advances in large language models (LLMs) have shown that it is possible to build software systems with a far more natural and fluid interface. These LLM-integrated systems turn natural language instructions into actions and are starting to appear in everything from office apps to robots. In this course, we will study the software engineering foundations for LLM-integrated systems. Students will learn how to build these systems, integrate them with existing software, rigorously test their behavior, and understand their failure modes and limitations. This is a programming intensive course and students will be expected to be proficient at programming and testing software that does not use LLMs. We will primarily work in Python, but prior Python experience is not required.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
38144,Boston,Research in Human-Centered NLP,CS4973,"Yun, Hye Sun","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: Course Description: This course aims to provide a human-centered perspective toward modern language technologies and highlights research topics shared between Human-Computer Interactions (HCI) and Natural Language Processing (NLP). In this course, you will learn and apply research methods for designing and developing human-centered NLP applications and systems. In the process, you will practice HCI research methods to design user-centered language technologies or interactive systems in a capstone project. As part of the course, you will read research papers at the intersection of NLP and HCI and practice critically evaluating them to identify future research directions. The course should help students gain the skills and confidence to pursue research at the intersection of HCI and NLP. Pre-requisites: CS 4100 Artificial Intelligence, DS 4400 Machine Learning and Data Mining 1, OR CS 4120 Natural Language Processing is highly recommended for AI concentration students. However, this can be waived if the student can demonstrate some previous experience with Natural Language Processing (NLP), through applied projects or co-ops. IS 4300 Human Computer Interaction, IS 4800 Empirical Research Methods, CS 4120 Natural Language Processing, CS 4520 Mobile Application Development, OR CS 4550 Web Development highly recommended for HCC concentration students. The coursework will only cover a crash course on NLP and the basics of using Large Language Models (LLMs) but will not cover the details of Python programming. While previous experience with specific technologies is not required, being proficient and comfortable with extensive programming is a fundamental prerequisite for this course. For the capstone project, there are opportunities for students with different strengths in their skills to collaborate. Students can reach out to the instructor to discuss pre-requisite skills.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '4100'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '4400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '4120'}, {'and_or': 'Or', 'subject': 'Information Science', 'course_number': '4300'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '4520'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '4550'}]"
39804,Boston,Operating Systems Implementati,CS4973,"Tan, Cheng",Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times.,Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
40551,"Portland, Maine",Intensive Foundations of Computer Science,CS5001,"Domino, Molly","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1800,2120,Tuesday,[]
40614,"Seattle, WA",Intensive Foundations of Computer Science,CS5001,"Geeng, Chris","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1800,2120,Wednesday,[]
41834,Online,Intensive Foundations of Computer Science,CS5001,"Domino, Molly","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1800,2120,Tuesday,[]
40682,"Silicon Valley, CA",Intensive Foundations of Computer Science,CS5001,"Narins, Lothar","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1500,1820,Wednesday,[]
40683,"Vancouver, Canada",Intensive Foundations of Computer Science,CS5001,"Coria Mendoza, Lino","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1045,1245,Monday,[]
35470,Boston,Robotic Science and Systems,CS4610,"Tan, Xiang Zhi","Introduces autonomous mobile robots, with a focus on algorithms and software development, including closed-loop control, robot software architecture, wheeled locomotion and navigation, tactile and basic visual sensing, obstacle detection and avoidance, and grasping and manipulation of objects. Offers students an opportunity to progressively construct mobile robots from a predesigned electromechanical kit. The robots are controlled wirelessly by software of the students’ own design, built within a provided robotics software framework. The course culminates in a grand challenge competition using all features of the robots.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3500'}]"
32498,Boston,Network Fundamentals,CS4700,"Jackson, Alden","Introduces the fundamental concepts of network protocols and network architectures. Presents the different harmonizing functions needed for the communication and effective operation of computer networks. Provides in-depth coverage of data link control, medium access control, routing, end-to-end transport protocols, congestion and flow control, multicasting, naming, auto configuration, quality of service, and network management. Studies the abstract mechanisms and algorithms as implemented in real-world Internet protocols. Also covers the most common application protocols (e-mail, Web, and ftp).",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3650'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}]"
39800,Boston,Network Fundamentals,CS4700,"Jackson, Alden","Introduces the fundamental concepts of network protocols and network architectures. Presents the different harmonizing functions needed for the communication and effective operation of computer networks. Provides in-depth coverage of data link control, medium access control, routing, end-to-end transport protocols, congestion and flow control, multicasting, naming, auto configuration, quality of service, and network management. Studies the abstract mechanisms and algorithms as implemented in real-world Internet protocols. Also covers the most common application protocols (e-mail, Web, and ftp).",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3650'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}]"
39801,Boston,Network Fundamentals,CS4700,"Jackson, Alden","Introduces the fundamental concepts of network protocols and network architectures. Presents the different harmonizing functions needed for the communication and effective operation of computer networks. Provides in-depth coverage of data link control, medium access control, routing, end-to-end transport protocols, congestion and flow control, multicasting, naming, auto configuration, quality of service, and network management. Studies the abstract mechanisms and algorithms as implemented in real-world Internet protocols. Also covers the most common application protocols (e-mail, Web, and ftp).",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3650'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}]"
39802,Boston,Distributed Systems,CS4730,"Nita-Rotaru, Cristina","Introduces distributed systems, covering fundamental concepts and showing how they are applied to build reliable distributed services. Examines several existing distributed applications, such as file systems, databases, lock services, digital currencies, smart contracts, and machine learning, and how these applications must coordinate to function and overcome failures, network partitions, or compromised parties. Distributed systems, such as databases, cloud services, and blockchains, are omnipresent in the services and applications that serve society on a daily basis.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3650'}]"
39805,Boston,Understanding Users,CS4973,"DeVito, Michael Ann","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: Introduces basic and advanced frameworks and methodological tools for understanding and accounting for the characteristics, needs, and attitudes of individual users and user groups. Covers how to better understand users from both a system design and sociotechnical system critique perspective via qualitative, interpretivist, and community-focused methods, as well as how to account for how users themselves understand and adapt to systems via approaches including mental models and folk theorization.",Spring 2025,1450,1630,Thursday,[]
39806,Boston,Animal-Computer Interaction,CS4973,"Kleinberger, Rebecca","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: Course Description: This special topic course introduces students to the field of Animal-Computer Interaction (ACI), focusing on the design and implementation of interactive systems for animals. Throughout the semester, students will explore the ethical considerations, species-specific requirements, and bespoke design methodologies necessary to create meaningful and enriching technologies for animals. The course covers various contexts, including pets, zoos, farms, and wildlife, emphasizing the importance of preference testing and understanding animals' needs. This is a project-based course where each student will design, build, and evaluate a novel interactive system for animals. Students will engage in hands-on projects, applying interdisciplinary knowledge from human-computer interaction, animal science, bioacoustics, and animal welfare. The curriculum includes collaboration with local partners such as aquariums, zoos, and animal shelters, providing real-world applications of ACI principles. The course also features guest lectures from renowned animal researchers, behaviorists, caretakers, and engineers, offering diverse insights and expertise. Prerequisites: IS 4300 Human-Computer Interaction Permission of the instructor Previous experience in software development, hardware prototyping, design, or animal science Course Objectives: Introduce the history and current state of ACI, including key stakeholders and adjacent fields. Examine ethical considerations and the importance of agency and welfare in designing for animals. Analyze and apply various data collection methods, including behavioral analysis, surveys, and automated video analysis. Explore technologies and interactive systems designed for animal use, considering their sensory and perceptual capabilities. Investigate the role of ACI in conservation, animal care, and social enrichment. Design, prototype, implement, and evaluate computer-based devices tailored to specific species and contexts. Key Topics: Introduction to ACI and its history Ethical considerations in ACI Stakeholders in ACI: Animals, pet owners, veterinarians, zoo caretakers, farmers, government and policies, and more Pet technology and its impact on animal welfare Data collection and analysis in ACI Technologies for animals: audio, vision, and enrichment ACI's role in conservation and animal care Social enrichment and its benefits for animals Course Structure: Weekly lectures and discussions Guest lectures from renowned animal researchers, behaviorists, caretakers, and engineers Practical design and weekly labs/ prototyping sessions Midterm presentations on ACI research papers, focusing on context, motivation, research questions, methods, ethical considerations, results, and discussions Final projects involving the design, implementation, and evaluation of an interactive system for a specific animal species This course is ideal for students passionate about leveraging technology to enhance animal welfare and agency, providing a unique opportunity to engage with cutting-edge research and practical applications in ACI. Previous experience in software development, hardware prototyping, design, or animal science suggested. All interested students, including those from other colleges or students not meeting official prerequisites, are encouraged to contact the instructor at r.kleinberger@northeastern.edu to discuss access.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Information Science', 'course_number': '4300'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5340'}]"
41142,Boston,Alg for Scalable Comp.,CS4973,"Pandey, Prashant","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: Topic: Data Structures & Algorithms for Scalable Computing This course studies advanced data structures and algorithms for handling scalability challenges in large-scale data analysis and machine learning pipelines. It will cover modern hashing techniques, filters and sketching algorithms, locality sensitive-hashing, succinct data structures, string algorithms, graph algorithms, external memory algorithms, and learned indexes. This course is appropriate for both undergraduate and graduate students with intermediate data structure and algorithm skills. The course will also require intermediate programming skills in C/C++. Website: https://prashantpandey.github.io/teaching/spring-2025-cs-7280-data-structures-algorithms-for-scalable-computing/",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}]"
41678,Boston,Intro to Offsec Development,CS4973,"Bernardini, Kai","Offers a lecture course in computer science on a topic not regularly taught in a formal course. Topics may vary from offering to offering. May be repeated up to three times. Section information text: The class introduces students to the wild world of offensive capabilities development and cyber threat hunting by taking on the role of both attacker and defender to better understand various stages of cyber attacks. Focusing on aarch64 Linux, students will create and analyze malware in the context of combating a simulated threat actor APT-Ch0nkyBear in addition to creating their own tools to emulate the fictional APT's capabilities. As an experimental feature this year, students will also practice hacking by attempting to hack the hackers-- you will be writing and deploying capabilities to gather information about ""compromised"" APT-Ch0nky Bear Infrastructure. The course culminates in a final project with the goal of developing production ready implant and command and control server targeting raspberry pi model >=4.",Spring 2025,1800,2120,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3000'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '3500'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '3500'}]"
32083,Boston,Intensive Foundations of Computer Science,CS5001,"Bagley, Keith","Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.",Spring 2025,1800,2120,Monday,[]
35417,Boston,Discrete Structures,CS5002,"Amor-Tijani, Ghita","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them.",Spring 2025,1450,1630,"Monday, Wednesday",[]
35638,Online,Discrete Structures,CS5002,"Stern, Jesse","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them. Section information text: Open to Align Online only",Spring 2025,,,,[]
40552,"Portland, Maine",Discrete Structures,CS5002,"Ganzell, Sanford","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them.",Spring 2025,1800,2120,Wednesday,[]
40617,"Seattle, WA",Discrete Structures,CS5002,"Jelani, Andrew","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them.",Spring 2025,1800,2120,Tuesday,[]
40685,"Silicon Valley, CA",Discrete Structures,CS5002,"Saad, Nadim","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them. Section information text: Section meets Monday in room 1045 and & Thursday in room 916",Spring 2025,1500,1640,Thursday,[]
40687,"Vancouver, Canada",Discrete Structures,CS5002,"Hoshino, Richard","Introduces the mathematical structures and methods that form the foundation of computer science. Studies structures such as sets, tuples, sequences, lists, trees, and graphs. Discusses functions, relations, ordering, and equivalence relations. Examines inductive and recursive definitions of structures and functions. Covers principles of proof such as truth tables, inductive proof, and basic logic and the counting techniques and arguments needed to estimate the size of sets, the growth of functions, and the space-time complexity of algorithms. Also, discusses data structures such as arrays, stacks, queues, lists, and the algorithms that manipulate them.",Spring 2025,1300,1500,Thursday,[]
32084,Boston,Recitation for CS 5001,CS5003,"Bagley, Keith",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1810,1940,Thursday,[]
35641,Boston,Recitation for CS 5001,CS5003,"Bagley, Keith",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1950,2120,Thursday,[]
40553,"Portland, Maine",Recitation for CS 5001,CS5003,"Domino, Molly",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1800,1930,Thursday,[]
40618,"Seattle, WA",Recitation for CS 5001,CS5003,"Geeng, Chris",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1800,1930,Monday,[]
40688,"Silicon Valley, CA",Recitation for CS 5001,CS5003,"Narins, Lothar",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1500,1630,Friday,[]
40689,"Silicon Valley, CA",Recitation for CS 5001,CS5003,"Narins, Lothar",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1700,1830,Friday,[]
40690,"Vancouver, Canada",Recitation for CS 5001,CS5003,"Coria Mendoza, Lino",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1045,1245,Wednesday,[]
41835,Online,Recitation for CS 5001,CS5003,"Domino, Molly",Provides a small-group discussion format to cover material in CS 5001. <i>Coreq CS 5001.</i>,Spring 2025,1800,1930,Thursday,[]
40588,"Arlington, VA",Object-Oriented Design,CS5004,"Jung, Youna","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1800,1940,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40554,"Portland, Maine",Object-Oriented Design,CS5004,"Cantrell, Gary","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40620,"Seattle, WA",Object-Oriented Design,CS5004,"Bonaci, Tamara","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1000,1320,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40621,"Seattle, WA",Object-Oriented Design,CS5004,"Geeng, Chris","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1000,1320,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40692,"Silicon Valley, CA",Object-Oriented Design,CS5004,"Miller, Mark","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1300,1620,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40693,"Silicon Valley, CA",Object-Oriented Design,CS5004,"Sharif Rohani, Aida","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1500,1820,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40694,"Vancouver, Canada",Object-Oriented Design,CS5004,"Buchanan, John","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1045,1245,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40695,"Vancouver, Canada",Object-Oriented Design,CS5004,"Buchanan, John","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1300,1500,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40696,"Vancouver, Canada",Object-Oriented Design,CS5004,"Buchanan, John","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,0830,1030,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40790,Online,Object-Oriented Design,CS5004,"Lionelle, Albert","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java. Section information text: Open to Align Online only",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
41159,"Miami, FL",Object-Oriented Design,CS5004,"Gongora Svartzman, Gabriela Noemi","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1300,1620,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40699,"Silicon Valley, CA",Recitation for CS 5004,CS5005,"Sharif Rohani, Aida",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1500,1630,Friday,[]
40700,"Silicon Valley, CA",Recitation for CS 5004,CS5005,"Sharif Rohani, Aida",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1700,1830,Friday,[]
40701,"Vancouver, Canada",Recitation for CS 5004,CS5005,"Buchanan, John",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1045,1245,Thursday,[]
40702,"Vancouver, Canada",Recitation for CS 5004,CS5005,"Buchanan, John",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1300,1500,Thursday,[]
40703,"Vancouver, Canada",Recitation for CS 5004,CS5005,"Buchanan, John",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,0830,1030,Thursday,[]
41326,Boston,Object-Oriented Design,CS5004,"Bagley, Keith","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
35643,"Oakland, CA",Object-Oriented Design,CS5004,"Rollins, Sami","Presents a comparative approach to object-oriented programming and design. Discusses the concepts of object, class, metaclass, message, method, inheritance, and genericity. Reviews forms of polymorphism in object-oriented languages. Contrasts the use of inheritance and composition as dual techniques for software reuse&#8212;forwarding vs. delegation and subclassing vs. subtyping. Offers students an opportunity to obtain a deeper understanding of the principles of object-oriented programming and design, including software components, object-oriented design patterns, and the use of graphical design notations such as UML (unified modeling language). Illustrates basic concepts in object-oriented design with case studies in application frameworks and by writing programs in Java.",Spring 2025,1225,1405,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40090,Boston,Recitation for CS 5004,CS5005,"Bagley, Keith",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1945,2115,Thursday,[]
40091,Boston,Recitation for CS 5004,CS5005,"Bagley, Keith",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1945,2115,Thursday,[]
40555,Online,Recitation for CS 5004,CS5005,"Cantrell, Gary",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1800,1930,Thursday,[]
40791,Online,Recitation for CS 5004,CS5005,"Lionelle, Albert",Provides small-group discussion format to cover material in CS 5004. Section information text: Open to Align Online only,Spring 2025,,,,[]
41165,"Miami, FL",Recitation for CS 5004,CS5005,"Gongora Svartzman, Gabriela Noemi",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1300,1430,Wednesday,[]
37038,"Oakland, CA",Recitation for CS 5004,CS5005,"Rollins, Sami",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1650,1820,Thursday,[]
35644,Online,"Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Stern, Jesse","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets. Section information text: Open to Align Online only",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40215,Online,"Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Ithier, Carter","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets. Section information text: Section meets MW 2:50pm - 4:30pm ET",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40589,"Arlington, VA",Recitation for CS 5004,CS5005,"Jung, Youna",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1530,1700,Wednesday,[]
40622,"Seattle, WA",Recitation for CS 5004,CS5005,"Bonaci, Tamara",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1000,1130,Friday,[]
40623,"Seattle, WA",Recitation for CS 5004,CS5005,"Geeng, Chris",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1000,1130,Thursday,[]
40697,"Silicon Valley, CA",Recitation for CS 5004,CS5005,"Miller, Mark",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1300,1430,Thursday,[]
40698,"Silicon Valley, CA",Recitation for CS 5004,CS5005,"Miller, Mark",Provides small-group discussion format to cover material in CS 5004.,Spring 2025,1500,1630,Thursday,[]
40216,Online,"Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Ithier, Carter","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets. Section information text: Section meets W 6-9:20pm ET",Spring 2025,1800,2120,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40556,"Portland, Maine","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Valcourt, Scott","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40590,"Arlington, VA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Socha, Katherine","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1800,1940,"Tuesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40624,"Seattle, WA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Mullen, Anthony","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1400,1720,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40625,"Seattle, WA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Shafer, Steven","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1800,2120,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40704,"Silicon Valley, CA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Hamandi, Lama","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1300,1440,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40705,"Silicon Valley, CA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Farahmand Asil, Maryam","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,0900,1220,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40706,"Vancouver, Canada","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Tanha, Maryam","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1045,1245,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40707,"Vancouver, Canada","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Schmidt, Logan","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1300,1500,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
40708,"Vancouver, Canada","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Akhmetov, Ildar","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1515,1715,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
41219,Online,"Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Valcourt, Scott","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
37044,"Oakland, CA","Data Structures, Algorithms, and Their Applications within Computer Systems",CS5008,"Wang, Susan","Presents an integrated approach to the study of data structures, algorithms, and their application within systems topics. Introduces a variety of fundamental algorithmic techniques (divide-and-conquer, dynamic programming, graph algorithms) and systems topics (models of computation, computer architecture, compilation, system software, networking). Demonstrates the integration of topics through programming assignments in the C language that implement fundamental data structures (lists, queues, trees, maps, graphs) and algorithms as they are applied in computer systems. Additional breadth topics include programming applications that expose students to primitives of different subsystems using threads and sockets.",Spring 2025,1500,1640,"Tuesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5001'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5002'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5002'}]"
34277,Online,Recitation for CS 5008,CS5009,"Stern, Jesse",Provides small-group active learning format to augment material in CS 5008. Section information text: Open to Align Online only,Spring 2025,,,,[]
40217,Boston,Recitation for CS 5008,CS5009,"Ithier, Carter",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1800,1930,Thursday,[]
40218,Boston,Recitation for CS 5008,CS5009,"Ithier, Carter",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1800,1930,Thursday,[]
40557,"Portland, Maine",Recitation for CS 5008,CS5009,"Valcourt, Scott",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1800,1930,Wednesday,[]
40591,"Arlington, VA",Recitation for CS 5008,CS5009,"Socha, Katherine",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1945,2030,"Tuesday, Thursday",[]
40626,"Seattle, WA",Recitation for CS 5008,CS5009,"Mullen, Anthony",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1030,1200,Monday,[]
40844,"Seattle, WA",Recitation for CS 5008,CS5009,"Shafer, Steven",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1800,1930,Monday,[]
40709,"Silicon Valley, CA",Recitation for CS 5008,CS5009,"Hamandi, Lama",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1500,1630,Wednesday,[]
40710,"Silicon Valley, CA",Recitation for CS 5008,CS5009,"Hamandi, Lama",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1500,1630,Thursday,[]
40711,"Silicon Valley, CA",Recitation for CS 5008,CS5009,"Farahmand Asil, Maryam",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,0900,1030,Thursday,[]
40712,"Silicon Valley, CA",Recitation for CS 5008,CS5009,"Farahmand Asil, Maryam",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1100,1230,Thursday,[]
40713,"Vancouver, Canada",Recitation for CS 5008,CS5009,"Tanha, Maryam",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1045,1245,Wednesday,[]
40714,"Vancouver, Canada",Recitation for CS 5008,CS5009,"Yazdanian, Saeed",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1300,1500,Wednesday,[]
40715,"Vancouver, Canada",Recitation for CS 5008,CS5009,"Yazdanian, Saeed",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1515,1715,Wednesday,[]
41218,Online,Recitation for CS 5008,CS5009,"Valcourt, Scott",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1800,1930,Wednesday,[]
37046,"Oakland, CA",Recitation for CS 5008,CS5009,"Wang, Susan",Provides small-group active learning format to augment material in CS 5008.,Spring 2025,1500,1640,Friday,[]
35646,Boston,Programming Design Paradigm,CS5010,"Shesh, Amit","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,0950,1130,"Tuesday, Friday",[]
35935,Boston,Programming Design Paradigm,CS5010,"Shesh, Amit","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1335,1515,"Tuesday, Friday",[]
37143,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1945,2115,Tuesday,[]
37631,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1945,2115,Tuesday,[]
37632,Boston,Recitation for CS 5010,CS5011,"Mitra, Joydeep",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1945,2115,Tuesday,[]
40560,"Portland, Maine",Recitation for CS 5010,CS5011,"Dym, Brianna",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,0900,1030,Thursday,[]
40561,"Portland, Maine",Recitation for CS 5010,CS5011,"Dym, Brianna",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1300,1430,Thursday,[]
40628,"Seattle, WA",Programming Design Paradigm,CS5010,"Cross, Brian","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1800,2120,Wednesday,[]
40716,"Silicon Valley, CA",Programming Design Paradigm,CS5010,"Cheng, Zhuoqun","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1700,1840,"Tuesday, Thursday",[]
40717,"Vancouver, Canada",Programming Design Paradigm,CS5010,"Thomas, Jack","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1300,1500,Tuesday,[]
37192,"Oakland, CA",Programming Design Paradigm,CS5010,"Guerra Gomez, John Alexis","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1615,1935,Wednesday,[]
35647,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
40593,"Arlington, VA",Recitation for CS 5010,CS5011,"Jung, Youna",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1520,1650,Tuesday,[]
40629,"Seattle, WA",Recitation for CS 5010,CS5011,"Chaudhary, Divya",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1000,1130,Wednesday,[]
40630,"Seattle, WA",Recitation for CS 5010,CS5011,"Cross, Brian",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1930,Tuesday,[]
40718,"Silicon Valley, CA",Recitation for CS 5010,CS5011,"Cheng, Zhuoqun",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1900,2030,Tuesday,[]
40719,"Silicon Valley, CA",Recitation for CS 5010,CS5011,"Cheng, Zhuoqun",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1900,2030,Thursday,[]
35418,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
35936,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
37674,Boston,Recitation for CS 5010,CS5011,"Shesh, Amit",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
34480,Boston,Recitation for CS 5010,CS5011,"Mitra, Joydeep",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
37142,Boston,Recitation for CS 5010,CS5011,"Mitra, Joydeep",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1800,1940,Tuesday,[]
39807,Boston,Programming Design Paradigm,CS5010,"Mitra, Joydeep","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1525,1705,"Tuesday, Friday",[]
40558,"Portland, Maine",Programming Design Paradigm,CS5010,"Dym, Brianna","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,0900,1220,Monday,[]
40559,"Portland, Maine",Programming Design Paradigm,CS5010,"Dym, Brianna","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1300,1620,Monday,[]
40592,"Arlington, VA",Programming Design Paradigm,CS5010,"Jung, Youna","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1300,1440,"Monday, Wednesday",[]
40627,"Seattle, WA",Programming Design Paradigm,CS5010,"Chaudhary, Divya","Introduces modern program design paradigms. Starts with functional program design, introducing the notion of a design recipe. The latter consists of two parts: a task organization (ranging from the description of data to the creation of a test suite) and a data-oriented approach to the organization of programs (ranging from atomic data to self-referential data definitions and functions as data). The course then progresses to object-oriented design, explaining how it generalizes and contrasts with functional design. In addition to studying program design, students also have an opportunity to practice pair-programming and public code review techniques, as found in industry today.",Spring 2025,1000,1320,Tuesday,[]
40720,"Vancouver, Canada",Recitation for CS 5010,CS5011,"Thomas, Jack",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,1300,1500,Thursday,[]
37193,"Oakland, CA",Recitation for CS 5010,CS5011,"Guerra Gomez, John Alexis",Provides small-group discussion format to cover material in CS 5010.,Spring 2025,0845,1015,Friday,[]
40498,Online,Exploring AI Trends and Tools,CS5047,"Feinberg, Daniel","Explores key ideas in artificial intelligence while delving into trending developments in the field. Examines AI tools and frameworks to enable collaboration effectively and efficiently across technical and nontechnical stakeholders. Analyzes topics such as AI-enabled perception, representation, reasoning, and learning as contextualized by societal impact. Offers students an opportunity to obtain the knowledge and skills necessary to confidently navigate the ever-evolving landscape of AI.",Spring 2025,,,,[]
41170,Boston,Exploring AI Trends and Tools,CS5047,"Reilly, Joseph","Explores key ideas in artificial intelligence while delving into trending developments in the field. Examines AI tools and frameworks to enable collaboration effectively and efficiently across technical and nontechnical stakeholders. Analyzes topics such as AI-enabled perception, representation, reasoning, and learning as contextualized by societal impact. Offers students an opportunity to obtain the knowledge and skills necessary to confidently navigate the ever-evolving landscape of AI.",Spring 2025,1145,1325,"Wednesday, Friday",[]
40562,"Portland, Maine",Mixed Reality,CS5097,"Bockmon, Ryan","Seeks to provide a strong foundation in the fundamentals of virtual and augmented reality, broadly defined as mixed reality (XR), and hands-on experience developing XR applications. Offers students an opportunity to dive into this burgeoning area of research and practice in computer science. Given the complex nature of XR environments, this course synthesizes theoretical and practice knowledge from various disciplines, including computer graphics, 3D interfaces, human-computer interaction, tracking systems, and perceptual psychology (to name a few). XR technologies have recently witnessed a resurgence of interest.",Spring 2025,1300,1620,Tuesday,[]
35671,Boston,Foundations of Artificial Intelligence,CS5100,"Venkatesaramani, Rajagopal","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,0915,1020,"Monday, Wednesday, Thursday",[]
37144,Boston,Foundations of Artificial Intelligence,CS5100,"Venkatesaramani, Rajagopal","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday",[]
37633,Boston,Foundations of Artificial Intelligence,CS5100,"Sloan, Rose","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,1450,1630,"Monday, Wednesday",[]
37828,Online,Foundations of Artificial Intelligence,CS5100,"Hoshino, Richard","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course. Section information text: Section meets T 2pm-5:20pm ET/ 11am-2:20pm PT; Eligible for Vancouver campus/programs",Spring 2025,1400,1720,Tuesday,[]
40563,"Portland, Maine",Foundations of Artificial Intelligence,CS5100,"Talaei Khoei, Tala","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,0900,1220,Wednesday,[]
40564,"Portland, Maine",Foundations of Artificial Intelligence,CS5100,"Mwaura, Jonathan","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,1300,1620,Wednesday,[]
40594,"Arlington, VA",Foundations of Artificial Intelligence,CS5100,"Wang, Huihui","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,1100,1420,Monday,[]
40721,"Silicon Valley, CA",Foundations of Artificial Intelligence,CS5100,"Saad, Nadim","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course. Section information text: Section meets Monday in room 1045 & Thursday in room 1010/1011",Spring 2025,1100,1240,Thursday,[]
40722,"Silicon Valley, CA",Foundations of Artificial Intelligence,CS5100,"Saad, Nadim","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,0900,1040,"Monday, Thursday",[]
40929,"Seattle, WA",Foundations of Artificial Intelligence,CS5100,"Veliz, Oscar","Introduces the fundamental problems, theories, and algorithms of the artificial intelligence field. Topics include heuristic search and game trees, knowledge representation using predicate calculus, automated deduction and its applications, problem solving and planning, and introduction to machine learning. Required course work includes the creation of working programs that solve problems, reason logically, and/or improve their own performance using techniques presented in the course.",Spring 2025,1000,1320,Friday,[]
40233,Boston,Game Artificial Intelligence,CS5150,"Isla, Damian","Offers an overview of classical and modern approaches to artificial intelligence in digital games. Focuses on the creation of believable agents and environments with the goal of providing a fun and engaging experience to a player. Covers player modeling, procedural content generation, behavior trees, interactive narrative, decision-making systems, cognitive modeling, and path planning. Explores different approaches for behavior generation, including learning and rule-based systems. Requires students to complete several individual assignments in these areas to apply the concepts covered in class. Students choose a group final project, which requires a report, to explore one aspect of artificial intelligence for games in further depth. Offers students an opportunity to learn team management and communication. Requires knowledge of algorithms and experience with object-oriented design or functional programming.",Spring 2025,1800,2120,Wednesday,[]
37052,Boston,Artificial Intelligence for Human-Computer Interaction,CS5170,"Marsella, Stacy","Offers an overview of the wide range of AI techniques that exploit knowledge of the domain and humans to facilitate interaction between humans and systems, mediate human-human interaction, leverage humans to improve system performance, and promote beneficial outcomes at the social and individual level. Topics can include AI/human computation, plan and activity recognition, smart sensing/homes, active learning, preference elicitation, intelligent/adaptive user interfaces, and mixed human-agent simulations. Studies how to design and develop intelligent interaction technologies while also critically assessing their social and ethical impact.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5100'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '6140'}]"
37053,Boston,Reinforcement Learning and Sequential Decision Making,CS5180,"Platt, Robert","Introduces reinforcement learning and the underlying computational frameworks and the Markov decision process framework. Covers a variety of reinforcement learning algorithms, including model-based, model-free, value function, policy gradient, actor-critic, and Monte Carlo methods. Examines commonly used representations including deep learning representations and approaches to partially observable problems. Students are expected to have a working knowledge of probability and linear algebra, to complete programming assignments, and to complete a course project that applies some form of reinforcement learning to a problem of interest.",Spring 2025,1525,1705,"Tuesday, Friday",[]
31010,Boston,Database Management Systems,CS5200,"Durant, Kathleen","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,0915,1020,"Monday, Wednesday, Thursday",[]
34334,Boston,Database Management Systems,CS5200,"Durant, Kathleen","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday",[]
35648,Boston,Database Management Systems,CS5200,"Durant, Kathleen","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1335,1440,"Monday, Wednesday, Thursday",[]
37145,Online,Database Management Systems,CS5200,"Schedlbauer, Martin","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,,,,[]
40632,"Seattle, WA",Database Management Systems,CS5200,"Cobbe, Richard","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1000,1320,Thursday,[]
40633,"Seattle, WA",Database Management Systems,CS5200,"Cobbe, Richard","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1000,1320,Friday,[]
40634,"Seattle, WA",Database Management Systems,CS5200,"Chhay, Bruce","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1830,2150,Thursday,[]
40723,"Silicon Valley, CA",Database Management Systems,CS5200,"Lee, Jeongkyu","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1500,1820,Monday,[]
40724,"Silicon Valley, CA",Database Management Systems,CS5200,"Amjad, Tehmina","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1100,1240,"Tuesday, Thursday",[]
40725,"Vancouver, Canada",Database Management Systems,CS5200,"Imran, Hazra","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1515,1715,Wednesday,[]
41537,"Miami, FL",Database Management Systems,CS5200,"Derbinsky, Nathaniel","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1300,1620,Thursday,[]
41446,"Oakland, CA",Database Management Systems,CS5200,"Monge, Alvaro","Introduces relational database management systems as a class of software systems. Prepares students to be sophisticated users of database management systems. Covers design theory, query language, and performance/tuning issues. Topics include relational algebra, SQL, stored procedures, user-defined functions, cursors, embedded SQL programs, client-server interfaces, entity-relationship diagrams, normalization, B-trees, concurrency, transactions, database security, constraints, object-relational DBMSs, and specialized engines such as spatial, text, XML conversion, and time series. Includes exercises using a commercial relational or object-relational database management system.",Spring 2025,1500,1640,"Tuesday, Thursday",[]
33274,Boston,Computer Graphics,CS5310,"Shesh, Amit","Introduces the fundamentals of two-dimensional and three-dimensional computer graphics, with an emphasis on approaches for obtaining realistic images. Covers two-dimensional algorithms for drawing lines and curves, anti-aliasing, filling, and clipping. Studies rendering of three-dimensional scenes composed of spheres, polygons, quadric surfaces, and bi-cubic surfaces using ray-tracing and radiosity. Includes techniques for adding texture to surfaces using texture and bump maps, noise, and turbulence. Requires knowledge of linear algebra.",Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': '', 'course_number': ''}]"
40727,"Silicon Valley, CA",Computer Graphics,CS5310,"Chen, Crane","Introduces the fundamentals of two-dimensional and three-dimensional computer graphics, with an emphasis on approaches for obtaining realistic images. Covers two-dimensional algorithms for drawing lines and curves, anti-aliasing, filling, and clipping. Studies rendering of three-dimensional scenes composed of spheres, polygons, quadric surfaces, and bi-cubic surfaces using ray-tracing and radiosity. Includes techniques for adding texture to surfaces using texture and bump maps, noise, and turbulence. Requires knowledge of linear algebra.",Spring 2025,1300,1440,"Wednesday, Friday","[{'and_or': '', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': '', 'course_number': ''}]"
34348,Online,Pattern Recognition and Computer Vision,CS5330,"Maxwell, Bruce","Introduces fundamental techniques for low-level and high-level computer vision. Examines image formation, early processing, boundary detection, image segmentation, texture analysis, shape from shading, photometric stereo, motion analysis via optic flow, object modeling, shape description, and object recognition (classification). Discusses models of human vision (gestalt effects, texture perception, subjective contours, visual illusions, apparent motion, mental rotations, and cyclopean vision). Requires knowledge of linear algebra. Section information text: Section meets W 5:00 pm - 8:20 pm ET/ W 2:00 pm - 5:20 pm PT",Spring 2025,1700,2020,Wednesday,"[{'and_or': '', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': '', 'course_number': ''}]"
40728,"Vancouver, Canada",Pattern Recognition and Computer Vision,CS5330,"Coria Mendoza, Lino","Introduces fundamental techniques for low-level and high-level computer vision. Examines image formation, early processing, boundary detection, image segmentation, texture analysis, shape from shading, photometric stereo, motion analysis via optic flow, object modeling, shape description, and object recognition (classification). Discusses models of human vision (gestalt effects, texture perception, subjective contours, visual illusions, apparent motion, mental rotations, and cyclopean vision). Requires knowledge of linear algebra.",Spring 2025,1515,1715,Friday,"[{'and_or': '', 'subject': 'Mathematics', 'course_number': '2331'}, {'and_or': 'Or', 'subject': '', 'course_number': ''}]"
35460,Boston,Robotic Science and Systems,CS5335,"Tan, Xiang Zhi","Introduces autonomous mobile robots with a focus on algorithms and software development, including closed-loop control, robot software architecture, wheeled locomotion and navigation, tactile and basic visual sensing, obstacle detection and avoidance, and grasping and manipulation of objects. Offers students an opportunity to progressively construct mobile robots from a predesigned electromechanical kit. The robots are controlled wirelessly by software of the students&#8217; own design, built within a provided robotics software framework. Culminates in a project that connects the algorithms and hardware developed in the course with a selected topic in the current robotics research literature.",Spring 2025,1450,1630,"Monday, Wednesday",[]
40729,"Vancouver, Canada",Robotic Science and Systems,CS5335,"Thomas, Jack","Introduces autonomous mobile robots with a focus on algorithms and software development, including closed-loop control, robot software architecture, wheeled locomotion and navigation, tactile and basic visual sensing, obstacle detection and avoidance, and grasping and manipulation of objects. Offers students an opportunity to progressively construct mobile robots from a predesigned electromechanical kit. The robots are controlled wirelessly by software of the students&#8217; own design, built within a provided robotics software framework. Culminates in a project that connects the algorithms and hardware developed in the course with a selected topic in the current robotics research literature.",Spring 2025,1300,1500,Wednesday,[]
32301,Boston,Computer/Human Interaction,CS5340,"To, Alexandra","Covers the principles of human-computer interaction and the design and evaluation of user interfaces. Topics include an overview of human information processing subsystems (perception, memory, attention, and problem solving); how the properties of these systems affect the design of user interfaces; the principles, guidelines, and specification languages for designing good user interfaces, with emphasis on tool kits and libraries of standard graphical user interface objects; and a variety of interface evaluation methodologies that can be used to measure the usability of software. Other topics may include World Wide Web design principles and tools, computer-supported cooperative work, multimodal and “next generation” interfaces, speech and natural language interfaces, and virtual reality interfaces. Course work includes both the creation and implementation of original user interface designs, and the evaluation of user interfaces created by others. Requires knowledge of C programming language/UNIX.",Spring 2025,1525,1705,"Tuesday, Friday",[]
37675,Boston,Computer/Human Interaction,CS5340,"Savage, Saiph","Covers the principles of human-computer interaction and the design and evaluation of user interfaces. Topics include an overview of human information processing subsystems (perception, memory, attention, and problem solving); how the properties of these systems affect the design of user interfaces; the principles, guidelines, and specification languages for designing good user interfaces, with emphasis on tool kits and libraries of standard graphical user interface objects; and a variety of interface evaluation methodologies that can be used to measure the usability of software. Other topics may include World Wide Web design principles and tools, computer-supported cooperative work, multimodal and “next generation” interfaces, speech and natural language interfaces, and virtual reality interfaces. Course work includes both the creation and implementation of original user interface designs, and the evaluation of user interfaces created by others. Requires knowledge of C programming language/UNIX.",Spring 2025,1800,2120,Thursday,[]
40635,"Seattle, WA",Computer/Human Interaction,CS5340,"Geeng, Chris","Covers the principles of human-computer interaction and the design and evaluation of user interfaces. Topics include an overview of human information processing subsystems (perception, memory, attention, and problem solving); how the properties of these systems affect the design of user interfaces; the principles, guidelines, and specification languages for designing good user interfaces, with emphasis on tool kits and libraries of standard graphical user interface objects; and a variety of interface evaluation methodologies that can be used to measure the usability of software. Other topics may include World Wide Web design principles and tools, computer-supported cooperative work, multimodal and “next generation” interfaces, speech and natural language interfaces, and virtual reality interfaces. Course work includes both the creation and implementation of original user interface designs, and the evaluation of user interfaces created by others. Requires knowledge of C programming language/UNIX.",Spring 2025,1400,1720,Thursday,[]
40730,"Silicon Valley, CA",Computer/Human Interaction,CS5340,"Bayat, Akram","Covers the principles of human-computer interaction and the design and evaluation of user interfaces. Topics include an overview of human information processing subsystems (perception, memory, attention, and problem solving); how the properties of these systems affect the design of user interfaces; the principles, guidelines, and specification languages for designing good user interfaces, with emphasis on tool kits and libraries of standard graphical user interface objects; and a variety of interface evaluation methodologies that can be used to measure the usability of software. Other topics may include World Wide Web design principles and tools, computer-supported cooperative work, multimodal and “next generation” interfaces, speech and natural language interfaces, and virtual reality interfaces. Course work includes both the creation and implementation of original user interface designs, and the evaluation of user interfaces created by others. Requires knowledge of C programming language/UNIX.",Spring 2025,0900,1220,Wednesday,[]
40565,"Portland, Maine",Foundations of Software Engineering,CS5500,"Cantrell, Gary","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1300,1620,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
40636,"Seattle, WA",Foundations of Software Engineering,CS5500,"Bonicillo, Mark","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1800,2120,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
40637,"Seattle, WA",Foundations of Software Engineering,CS5500,"Lash, Alexander","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1300,1620,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
40731,"Silicon Valley, CA",Foundations of Software Engineering,CS5500,"Mathapathi, Shivakumar","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1500,1820,Friday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
40732,"Vancouver, Canada",Foundations of Software Engineering,CS5500,"Rajabi, Parsa","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1300,1500,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
41263,Boston,Computer/Human Interaction,CS5340,"Hofmann, Megan","Covers the principles of human-computer interaction and the design and evaluation of user interfaces. Topics include an overview of human information processing subsystems (perception, memory, attention, and problem solving); how the properties of these systems affect the design of user interfaces; the principles, guidelines, and specification languages for designing good user interfaces, with emphasis on tool kits and libraries of standard graphical user interface objects; and a variety of interface evaluation methodologies that can be used to measure the usability of software. Other topics may include World Wide Web design principles and tools, computer-supported cooperative work, multimodal and “next generation” interfaces, speech and natural language interfaces, and virtual reality interfaces. Course work includes both the creation and implementation of original user interface designs, and the evaluation of user interfaces created by others. Requires knowledge of C programming language/UNIX.",Spring 2025,1450,1630,Thursday,[]
30630,Boston,Principles of Programming Language,CS5400,"Holtzen, Steven","Studies the basic components of programming languages, specification of syntax and semantics, and description and implementation of programming language features. Discusses examples from a variety of languages.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
37055,Boston,Principles of Programming Language,CS5400,"Barzilay, Eliyahu","Studies the basic components of programming languages, specification of syntax and semantics, and description and implementation of programming language features. Discusses examples from a variety of languages.",Spring 2025,1800,2120,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
30691,Boston,Foundations of Software Engineering,CS5500,"Mitra, Joydeep","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
37639,Boston,Foundations of Software Engineering,CS5500,"Mitra, Joydeep","Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.",Spring 2025,1335,1515,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}]"
34315,Online,Mobile Application Development,CS5520,"Feinberg, Daniel","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,,,,[]
40566,"Portland, Maine",Mobile Application Development,CS5520,"Cantrell, Gary","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,1300,1620,Tuesday,[]
40638,"Seattle, WA",Mobile Application Development,CS5520,"Veliz, Oscar","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,1000,1320,Tuesday,[]
40733,"Silicon Valley, CA",Mobile Application Development,CS5520,"Mathapathi, Shivakumar","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,0900,1220,Friday,[]
40734,"Vancouver, Canada",Mobile Application Development,CS5520,"Changizi, Neda","Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.",Spring 2025,1300,1500,Monday,[]
40567,"Portland, Maine",Game Programming,CS5540,"Talaei Khoei, Tala",Covers the skills needed to develop easily scalable and modifiable scripts that can be used to implement various game mechanics common to most game genres. Programming is an integral part of the digital game design and development life cycle. Designed as a foundational game programming course covering numerous aspects of game programming.,Spring 2025,1300,1620,Monday,[]
41172,Online,Game Programming,CS5540,"Yildirim, Caglar",Covers the skills needed to develop easily scalable and modifiable scripts that can be used to implement various game mechanics common to most game genres. Programming is an integral part of the digital game design and development life cycle. Designed as a foundational game programming course covering numerous aspects of game programming. Section information text: Open to Vancouver campus/programs,Spring 2025,,,,[]
31009,Boston,Computer Systems,CS5600,"Shin, Ji Yong","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.",Spring 2025,1145,1325,"Monday, Thursday",[]
35421,Online,Computer Systems,CS5600,"Wan, Kai Yee","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses. Section information text: Eligible for Vancouver campus/programs",Spring 2025,,,,[]
40595,"Arlington, VA",Computer Systems,CS5600,"Jung, Youna","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.",Spring 2025,1130,1450,Tuesday,[]
40639,"Seattle, WA",Computer Systems,CS5600,"Mishra, Aditya","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.",Spring 2025,1000,1320,Friday,[]
40735,"Silicon Valley, CA",Computer Systems,CS5600,"Amjad, Tehmina","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.",Spring 2025,1300,1440,"Tuesday, Thursday",[]
41470,"Oakland, CA",Computer Systems,CS5600,"Amjad, Tehmina","Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses. Section information text: Livecast from the Silicon Valley campus",Spring 2025,1300,1440,"Tuesday, Thursday",[]
35649,Online,Web Development,CS5610,"Annunziato, Jose","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,,,,[]
34342,Online,Web Development,CS5610,"Penarrieta, Cristian","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,,,,[]
30536,Boston,Fundamentals of Computer Networking,CS5700,"Jackson, Alden","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,1525,1705,"Tuesday, Friday",[]
34349,Online,Fundamentals of Computer Networking,CS5700,"Sharifian Attar, Ali","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,,,,[]
40569,"Portland, Maine",Fundamentals of Computer Networking,CS5700,"Valcourt, Scott","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,0900,1220,Friday,[]
40642,"Seattle, WA",Fundamentals of Computer Networking,CS5700,"Singh, Sarita","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,1400,1720,Thursday,[]
41637,"Seattle, WA",Fundamentals of Computer Networking,CS5700,"Singh, Sarita","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,1000,1320,Thursday,[]
40568,"Portland, Maine",Web Development,CS5610,"Bogden, Philip","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,0900,1220,Friday,[]
40640,"Seattle, WA",Web Development,CS5610,"Jorgensen, Austin","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,1800,2120,Thursday,[]
40641,"Seattle, WA",Web Development,CS5610,"Veliz, Oscar","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,1400,1720,Friday,[]
40736,"Vancouver, Canada",Web Development,CS5610,"Changizi, Neda","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,1045,1245,Thursday,[]
37680,"Oakland, CA",Web Development,CS5610,"Guerra Gomez, John Alexis","Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.",Spring 2025,1035,1215,"Tuesday, Friday",[]
40570,"Portland, Maine",Algorithms,CS5800,"Viles, Weston","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1300,1620,Tuesday,[]
40571,"Portland, Maine",Algorithms,CS5800,"Ganzell, Sanford","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1300,1620,Thursday,[]
40572,"Portland, Maine",Algorithms,CS5800,"Ganzell, Sanford","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1800,2120,Monday,[]
40643,"Seattle, WA",Algorithms,CS5800,"Lee, Hyonho","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1800,2120,Tuesday,[]
40644,"Seattle, WA",Algorithms,CS5800,"Stalfa, David","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1400,1720,Wednesday,[]
37643,"Oakland, CA",Fundamentals of Computer Networking,CS5700,"Konrad, Almudena","Studies network protocols, focusing on modeling and analysis, and architectures. Introduces modeling concepts, emphasizing queuing theory, including Little&#8217;s theorem, M/M/1, M/M/m, M/D/1, and M/G/1 queuing systems. Discusses performance evaluation of computer networks including performance metrics, evaluation tools and methodology, simulation techniques, and limitations. Presents the different harmonizing functions needed for communication and efficient operation of computer networks and discusses examples of Ethernet, FDDI, and wireless networks. Covers link layer protocols including HDLC, PPP, and SLIP; packet framing; spanning tree and learning bridges, error detection techniques, and automatic repeat request algorithms; sliding window and reliable/ordered services; and queuing disciplines including FQ and WFQ. Introduces flow control schemes, such as window flow control and leaky bucket rate control schemes, and discusses congestion control and fairness. Requires knowledge of probability theory.",Spring 2025,1150,1330,"Monday, Wednesday",[]
30537,Boston,Algorithms,CS5800,"Tsekourakis, Iraklis","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1030,1135,"Monday, Wednesday, Thursday",[]
35910,Boston,Algorithms,CS5800,"Tsekourakis, Iraklis","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1145,1325,"Monday, Thursday",[]
34278,Boston,Algorithms,CS5800,"Tsekourakis, Iraklis","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1450,1630,"Monday, Wednesday",[]
34290,Online,Algorithms,CS5800,"Aloupis, Gregory","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,,,,[]
40645,"Seattle, WA",Algorithms,CS5800,"Bonaci, Tamara","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1200,1520,Friday,[]
40738,"Silicon Valley, CA",Algorithms,CS5800,"Hamandi, Lama","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1300,1440,"Tuesday, Thursday",[]
40739,"Silicon Valley, CA",Algorithms,CS5800,"Mukund, Smruthi","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1700,2020,Friday,[]
40740,"Vancouver, Canada",Algorithms,CS5800,"Rad, Ryan","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1045,1245,Wednesday,[]
40741,"Vancouver, Canada",Algorithms,CS5800,"Rad, Ryan","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1300,1500,Wednesday,[]
37071,Online,Natural Language Processing,CS6120,"Ahmad, Uzair","Provides an introduction to the computational modeling of human language, the ongoing effort to create computer programs that can communicate with people in natural language, and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpuses, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models, and implementation of working programs that analyze and interpret natural language text. Section information text: Eligible for Vancouver campus/programs",Spring 2025,,,,[]
40742,"Silicon Valley, CA",Natural Language Processing,CS6120,"Ni, Karl","Provides an introduction to the computational modeling of human language, the ongoing effort to create computer programs that can communicate with people in natural language, and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpuses, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models, and implementation of working programs that analyze and interpret natural language text.",Spring 2025,1600,1920,Thursday,[]
41327,Boston,Natural Language Processing,CS6120,"Tahmasebi Maraghoosh, Amir","Provides an introduction to the computational modeling of human language, the ongoing effort to create computer programs that can communicate with people in natural language, and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpuses, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models, and implementation of working programs that analyze and interpret natural language text.",Spring 2025,1800,2120,Thursday,[]
41830,Online,Natural Language Processing,CS6120,"Ahmad, Uzair","Provides an introduction to the computational modeling of human language, the ongoing effort to create computer programs that can communicate with people in natural language, and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpuses, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models, and implementation of working programs that analyze and interpret natural language text.",Spring 2025,,,,[]
31163,Boston,Machine Learning,CS6140,"Elhamifar, Ehsan","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,0950,1130,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
41642,"Seattle, WA",Algorithms,CS5800,"Bonaci, Tamara","Presents the mathematical techniques used for the design and analysis of computer algorithms. Focuses on algorithmic design paradigms and techniques for analyzing the correctness, time, and space complexity of algorithms. Topics may include asymptotic notation, recurrences, loop invariants, Hoare triples, sorting and searching, advanced data structures, lower bounds, hashing, greedy algorithms, dynamic programming, graph algorithms, and NP-completeness.",Spring 2025,1000,1320,Monday,[]
35472,Online,Building Game Engines,CS5850,"Sajnovsky, Ryon","Discusses the components of game engines and strategies for their software implementation. Includes graphics management algorithms (animation, scene graph, level of detail); basic artificial intelligence algorithms (search, decision making, sensing); and related algorithmic issues (networking, threading, input processing). Explores the use of data-driven software design. Offers students an opportunity to use a rendering engine and to build and integrate several software components to create a complete game engine. Requires students to work on individual assignments and then develop a project in a team, which requires a report. Offers students an opportunity to learn team/project management; work division; team communication; and the software development cycle of implementation, testing, critique, and further iteration. Requires knowledge of computer graphics, differential calculus, operating systems concepts, and algorithms. Section information text: Eligible for Vancouver campus/programs.",Spring 2025,,,,[]
40573,Online,Topics: Capstone,CS5963,"Cantrell, Gary","Offers students an opportunity to learn about timely issues, develop new skills, or explore areas of broad interest in an immersive, short-course format. Content and instructors vary by offering.",Spring 2025,,,,[]
41695,Boston,Projects for Professionals,CS5964,"Fields, David","Offers students an applied project setting in which to apply their curricular learning. Working with a sponsor, students refine an applied research topic, perform research, develop recommendations that are shared with a partner sponsor, and create a plan for implementing their recommendations. Seeks to benefit students with a curriculum that supports the development of key business communication skills, project and client management skills, and frameworks for business analysis. Offers students an opportunity to learn from sponsor feedback, review 'lessons learned,' and incorporate suggestions from this review to improve and further develop their career development and professional plan. May be repeated twice. Section information text: Will meet in the Burnes Center, 271 Huntington, Suite 200",Spring 2025,1000,1400,Friday,[]
35650,Boston,Natural Language Processing,CS6120,"Tahmasebi Maraghoosh, Amir","Provides an introduction to the computational modeling of human language, the ongoing effort to create computer programs that can communicate with people in natural language, and current applications of the natural language field, such as automated document classification, intelligent query processing, and information extraction. Topics include computational models of grammar and automatic parsing, statistical language models and the analysis of large text corpuses, natural language semantics and programs that understand language, models of discourse structure, and language use by intelligent agents. Course work includes formal and mathematical analysis of language models, and implementation of working programs that analyze and interpret natural language text.",Spring 2025,1800,2120,Tuesday,[]
40743,"Silicon Valley, CA",Machine Learning,CS6140,"Toutiaee, Mohammadhossein","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1500,1820,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40744,"Vancouver, Canada",Machine Learning,CS6140,"Mohan, Aanchan","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1045,1245,Tuesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
41227,"Miami, FL",Machine Learning,CS6140,"LANCEWICKI, TOMER","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
31298,Boston,Information Retrieval,CS6200,"Smith, David","Provides an introduction to information retrieval systems and different approaches to information retrieval. Topics covered include evaluation of information retrieval systems; retrieval, language, and indexing models; file organization; compression; relevance feedback; clustering; distributed retrieval and metasearch; probabilistic approaches to information retrieval; Web retrieval; filtering, collaborative filtering, and recommendation systems; cross-language IR; multimedia IR; and machine learning for information retrieval.",Spring 2025,1450,1630,Thursday,[]
40648,"Seattle, WA",Information Retrieval,CS6200,"Sushmita, Shanu","Provides an introduction to information retrieval systems and different approaches to information retrieval. Topics covered include evaluation of information retrieval systems; retrieval, language, and indexing models; file organization; compression; relevance feedback; clustering; distributed retrieval and metasearch; probabilistic approaches to information retrieval; Web retrieval; filtering, collaborative filtering, and recommendation systems; cross-language IR; multimedia IR; and machine learning for information retrieval.",Spring 2025,1100,1420,Monday,[]
34291,Online,Machine Learning,CS6140,"Ahmad, Uzair","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40575,"Portland, Maine",Machine Learning,CS6140,"Talaei Khoei, Tala","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1300,1620,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40596,"Arlington, VA",Machine Learning,CS6140,"Socha, Katherine","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1130,1450,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40646,"Seattle, WA",Machine Learning,CS6140,"Sushmita, Shanu","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,1100,1420,Friday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40647,"Seattle, WA",Machine Learning,CS6140,"Hu, Yifan","Provides a broad look at a variety of techniques used in machine learning and data mining, and also examines issues associated with their use. Topics include algorithms for supervised learning including decision tree induction, artificial neural networks, instance-based learning, probabilistic methods, and support vector machines; unsupervised learning; and reinforcement learning. Also covers computational learning theory and other methods for analyzing and measuring the performanceof learning algorithms. Course work includes a programming term project.",Spring 2025,0910,1230,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
31689,Boston,Compilers,CS6410,"Lerner, Benjamin","Expects each student to write a small compiler. Topics include parser generation, abstract syntax trees, symbol tables, type checking, generation of intermediate code, simple code improvement, register allocation, run-time structures, and code generation.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7400'}]"
40651,"Seattle, WA",Advanced Software Development,CS6510,"Skoteiniotis, Therapon","Designed to integrate academic concepts and practical experience of software design by having students work as part of a programming team, with an option to lead a subteam. Offers students an opportunity to study, in-depth, some aspects of the development process. The goal is to have students participate in a large-scale project, taking time to reflect and analyze the work and the process, rather than concentrating exclusively on the final product. Students who do not meet course prerequisites may seek permission of instructor.",Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5500'}]"
35651,Online,Fundamentals of Cloud Computing,CS6620,"Aibin, Michal","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,,,,[]
40652,"Seattle, WA",Fundamentals of Cloud Computing,CS6620,"Mullen, Anthony","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,1400,1720,Monday,[]
40653,"Seattle, WA",Fundamentals of Cloud Computing,CS6620,"Mullen, Anthony","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,1000,1320,Wednesday,[]
37150,Online,Data Mining Techniques,CS6220,"Arunagiri, Sara","Covers various aspects of data mining, including classification, prediction, ensemble methods, association rules, sequence mining, and cluster analysis. The class project involves hands-on practice of mining useful knowledge from a large data set. Section information text: Eligible for Vancouver campus/programs",Spring 2025,,,,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40649,"Seattle, WA",Data Mining Techniques,CS6220,"Hu, Yifan","Covers various aspects of data mining, including classification, prediction, ensemble methods, association rules, sequence mining, and cluster analysis. The class project involves hands-on practice of mining useful knowledge from a large data set.",Spring 2025,1300,1620,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40745,"Silicon Valley, CA",Data Mining Techniques,CS6220,"Toutiaee, Mohammadhossein","Covers various aspects of data mining, including classification, prediction, ensemble methods, association rules, sequence mining, and cluster analysis. The class project involves hands-on practice of mining useful knowledge from a large data set.",Spring 2025,1500,1820,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
40650,"Seattle, WA",Large-Scale Parallel Data Processing,CS6240,"Chaudhary, Divya","Covers big-data analysis techniques that scale out with increasing number of compute nodes, e.g., for cloud computing. Emphasizes approaches for problem and data partitioning that distribute work effectively, while keeping total cost for computation and data transfer low. Studies and analyzes deterministic and random algorithms from a variety of domains, including graphs, data mining, linear algebra, and information retrieval in terms of their cost, scalability, and robustness against skew. Course work emphasizes hands-on programming experience with modern state-of-the-art big-data processing technology. Students who do not meet course prerequisites may seek permission of instructor.",Spring 2025,1230,1550,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '7205'}]"
37057,Boston,Empirical Research Methods,CS6350,"Saha, Abir","Presents an overview of methods for conducting empirical research within computer science. These methods help provide objective answers to questions about the usability, effectiveness, and acceptability of systems. The course covers the basics of the scientific method, building from a survey of objective measures to the fundamentals of hypothesis testing using relatively simple research designs, and on to more advanced research designs and statistical methods. The course also includes a significant amount of fieldwork, spanning the design, conduct, and presentation of small empirical studies.",Spring 2025,1145,1325,"Monday, Thursday",[]
40746,"Silicon Valley, CA",Fundamentals of Cloud Computing,CS6620,"Cheng, Zhuoqun","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,1700,2020,Friday,[]
40747,"Vancouver, Canada",Fundamentals of Cloud Computing,CS6620,"Aibin, Michal","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,1730,1930,Thursday,[]
41741,"Seattle, WA",Fundamentals of Cloud Computing,CS6620,"Mishra, Aditya","Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.",Spring 2025,1000,1320,Wednesday,[]
39808,Boston,Operating Systems Implementation,CS6640,"Tan, Cheng","Introduces concepts of OS kernels. Discusses the design and implementation of today's OS kernel components, such as process abstraction, virtual memory module, and file systems. Offers students an opportunity to obtain hands-on experience in building these components step-by-step through a series of assignments on a state-of-the-art hardware platform and to implement their own OS kernels that can run on bare-metal machines.",Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '3650'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5600'}]"
37840,Online,Building Scalable Distributed Systems,CS6650,"Saripalli, Kanaka","Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.",Spring 2025,,,,[]
40654,"Seattle, WA",Building Scalable Distributed Systems,CS6650,"Rajpal, Vishal","Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.",Spring 2025,1800,2120,Friday,[]
40748,"Vancouver, Canada",Building Scalable Distributed Systems,CS6650,"Coady, Monica","Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.",Spring 2025,1300,1500,Thursday,[]
41478,"Seattle, WA",Building Scalable Distributed Systems,CS6650,"Phipps, Geoffrey","Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.",Spring 2025,1000,1320,Wednesday,[]
40749,"Vancouver, Canada","Privacy, Security, and Usability",CS6760,"Schmidt, Logan","Challenges conventional wisdom and encourages students to discover ways that security, privacy, and usability can be made synergistic in system design. Usability and security are widely seen as two antagonistic design goals for complex computer systems. Topics include computer forensics, network forensics, user interface design, backups, logging, economic factors affecting adoption of security technology, trust management, and related public policy. Uses case studies such as PGP, S/MIME, and SSL. Introduces basic cryptography and hash function as it is needed. Course work includes analysis of papers, problem sets, and a substantial term project.",Spring 2025,1515,1715,Wednesday,[]
38194,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Cengic, Smajl",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38195,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Celestine, Thea",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38196,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Vander Laan, Kathleen",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38512,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Ross, Jennifer",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38513,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Stimac, Emily",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38514,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Odama, Natasha",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38515,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Bradley, Meghan",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38516,"No campus, no room needed",Co-op Work Experience - Half-Time,CS6954,"Smith, Amy",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38201,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Cengic, Smajl",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38202,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Celestine, Thea",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38203,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Vander Laan, Kathleen",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38517,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Ross, Jennifer",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38518,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Stimac, Emily",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38519,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Odama, Natasha",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38520,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Bradley, Meghan",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38521,"No campus, no room needed",Co-op Work Experience Abroad - Half-Time,CS6955,"Smith, Amy",Provides eligible students with an opportunity for work experience abroad. May be repeated once.,Spring 2025,,,,[]
38524,"No campus, no room needed",Co-op Work Experience,CS6964,"Odama, Natasha",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38525,"No campus, no room needed",Co-op Work Experience,CS6964,"Bradley, Meghan",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38526,"No campus, no room needed",Co-op Work Experience,CS6964,"Smith, Amy",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
39133,"No campus, no room needed",Co-op Work Experience,CS6964,"Smith, Amanda",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38200,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Cengic, Smajl",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38197,"No campus, no room needed",Co-op Work Experience,CS6964,"Cengic, Smajl",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38198,"No campus, no room needed",Co-op Work Experience,CS6964,"Celestine, Thea",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38199,"No campus, no room needed",Co-op Work Experience,CS6964,"Vander Laan, Kathleen",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38522,"No campus, no room needed",Co-op Work Experience,CS6964,"Ross, Jennifer",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38523,"No campus, no room needed",Co-op Work Experience,CS6964,"Stimac, Emily",Provides eligible students with an opportunity for work experience. May be repeated without limit.,Spring 2025,,,,[]
38204,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Celestine, Thea",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38205,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Vander Laan, Kathleen",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38527,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Ross, Jennifer",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38528,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Stimac, Emily",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38529,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Odama, Natasha",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
41859,Boston,Deep Learning,CS7150,"Bau, David","Introduces deep learning, including the statistical learning framework, empirical risk minimization, loss function selection, fully connected layers, convolutional layers, pooling layers, batch normalization, multilayer perceptrons, convolutional neural networks, autoencoders, U-nets, residual networks, gradient descent, stochastic gradient descent, backpropagation, autograd, visualization of neural network features, robustness and adversarial examples, interpretability, continual learning, and applications in computer vision and natural language processing. Assumes students already have a basic knowledge of machine learning, optimization, linear algebra, and statistics.",Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '6140'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '5220'}]"
40248,Boston,Seminar in Artificial Intelligence,CS7170,"ElSherif, May",Offers students an opportunity to read and present various survey and research papers in artificial intelligence. May be repeated up to five times for a maximum of 24 semester hours. Faculty supervisor and topics vary from semester to semester.,Spring 2025,1525,1705,"Tuesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5100'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5100'}]"
41328,Boston,Seminar in Artificial Intelligence,CS7170,"Hand, Paul",Offers students an opportunity to read and present various survey and research papers in artificial intelligence. May be repeated up to five times for a maximum of 24 semester hours. Faculty supervisor and topics vary from semester to semester.,Spring 2025,1800,2120,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5100'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5100'}]"
41860,Boston,Seminar in Artificial Intelligence,CS7170,"Jin, Wengong",Offers students an opportunity to read and present various survey and research papers in artificial intelligence. May be repeated up to five times for a maximum of 24 semester hours. Faculty supervisor and topics vary from semester to semester.,Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5100'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5100'}]"
40655,"Seattle, WA",SpTp: Practical AI,CS7180,"Aguiar, Everaldo",Offers various topics on artificial intelligence. May be repeated up to two times.,Spring 2025,1700,2020,Thursday,[]
40657,"Seattle, WA",SpTp: Generative AI,CS7180,"Rad, Ryan",Offers various topics on artificial intelligence. May be repeated up to two times. Section information text: Livecast from Vancouver campus; hybrid section,Spring 2025,1515,1715,Tuesday,[]
40751,Online,"CS&amp;AI in Edu: Past,Prsnt,Futr",CS7180,"Miller, Mark",Offers various topics on artificial intelligence. May be repeated up to two times. Section information text: Section meets W 7pm-9pm ET/ 4pm-6pm PT; Eligible for Vancouver campus/programs,Spring 2025,1900,2100,Wednesday,[]
40761,"Vancouver, Canada",SpTp: Intro to Generative AI,CS7180,"Rad, Ryan",Offers various topics on artificial intelligence. May be repeated up to two times.,Spring 2025,1515,1715,Tuesday,[]
39810,Boston,Statistical Methods for Computer Science,CS7200,"Vitek, Olga","Introduces concepts in applied statistics. Covers frequentist and Bayesian characterization of uncertainty for continuous and categorical data, principles of experimental design, and methods of causal inference. Discusses the methodological foundations, as well as issues of practical implementation and use.",Spring 2025,0950,1130,"Tuesday, Friday",[]
40808,Online,Information Visualization: Theory and Applications,CS7250,"Padilla, Lace","Covers foundational as well as contemporary topics of interest in data visualization to enable the effective representation of data across disciplines, including examples drawn from computer science, physical sciences, biomedical sciences, humanities, and economics. Topics include data visualization theory and methodology, visualization design and evaluation, visual perception and cognition, interaction principles, and data encoding and representation techniques. Students who do not meet course restrictions may seek permission of instructor. Section information text: Open to Vancouver campus/programs",Spring 2025,,,,[]
38530,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Bradley, Meghan",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
38531,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Smith, Amy",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
39196,"No campus, no room needed",Co-op Work Experience Abroad,CS6965,"Smith, Amanda",Provides eligible students with an opportunity for work experience abroad. May be repeated without limit.,Spring 2025,,,,[]
37226,Boston,Topic: Understanding Users,CS6983,"DeVito, Michael Ann","Offers various topics in computer science. May be repeated once. Section information text: Introduces basic and advanced frameworks and methodological tools for understanding and accounting for the characteristics, needs, and attitudes of individual users and user groups. Covers how to better understand users from both a system design and sociotechnical system critique perspective via qualitative, interpretivist, and community-focused methods, as well as how to account for how users themselves understand and adapt to systems via approaches including mental models and folk theorization.",Spring 2025,1450,1630,Thursday,[]
37249,Boston,Topic: Animal-Comp Interaction,CS6983,"Kleinberger, Rebecca",Offers various topics in computer science. May be repeated once.,Spring 2025,1335,1515,"Tuesday, Friday",[]
41152,Boston,Information Visualization: Theory and Applications,CS7250,"Bertini, Enrico","Covers foundational as well as contemporary topics of interest in data visualization to enable the effective representation of data across disciplines, including examples drawn from computer science, physical sciences, biomedical sciences, humanities, and economics. Topics include data visualization theory and methodology, visualization design and evaluation, visual perception and cognition, interaction principles, and data encoding and representation techniques. Students who do not meet course restrictions may seek permission of instructor.",Spring 2025,1800,2120,Thursday,[]
41125,Boston,Topic: Alg for Scalable Comp,CS7280,"Pandey, Prashant",Offers various topics. Possible areas include object-oriented database systems and distributed database systems. May be repeated up to two times. Section information text: Topic: Data Structures & Algorithms for Scalable Computing **Will count toward AI & Data Science OR Systems & Software breadth areas** Course site: https://prashantpandey.github.io/teaching/spring-2025-cs-7280-data-structures-algorithms-for-scalable-computing/,Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}]"
40809,Online,SpTp: IR &amp; NLP,CS7290,"Alonso, Omar","Offers special topics in data science, including machine learning, statistics, data mining, parallel and distributed data analysis, database systems, information retrieval, knowledge representation, information visualization, natural language processing, computational biology and bioinformatics, computational social science, digital humanities, health informatics, business, and predictive analytics. May be repeated once for up to 8 total credits. Section information text: Open to Vancouver campus/programs",Spring 2025,,,,[]
35426,Boston,Empirical Research Methods for Human Computer Interaction,CS7300,"Bickmore, Timothy","Introduces concepts related to human subject studies for human computer interaction and personal health informatics. Discusses the methodological foundations, as well as issues of practical implementation and use. Provides an overview of the most common experimental designs used in these fields, and how studies should be proposed, conducted, analyzed, and documented for publication. Covers qualitative methods, including interviewing and focus groups, along with approaches to inductive qualitative data analysis. Methods discussed in the course are useful in any area of science that involves the application of the scientific method to situations involving people interacting with computational artifacts or systems, including observation, hypothesis formation, measurement, and descriptive and inferential statistical analyses.",Spring 2025,1145,1325,"Monday, Thursday",[]
40549,Boston,Sem:HmnCntrdPrvcyDsgnSys,CS7375,"Li, Tianshi","Offers students an opportunity to read and present various survey and research papers in human-computer interaction, computer-supported collaborative work, data visualization, social computing, design, critical computing, accessibility, game design, health informatics, personal health informatics, human-robot interaction, or HCI in security. May be repeated once. Section information text: Seminar: Human-Centered Privacy Design and System Course description: The class is a seminar course on human-centered privacy design and systems. In this class, we will explore the topic of designing and developing privacy-aware digital systems by providing an overview of technical, design, and legal perspectives. Students will learn theoretical frameworks of privacy, privacy design principles, privacy laws, and privacy-enhancing technologies. We will also cover user research methods that are useful for designing and evaluating digital systems that are aware of and respectful to users' privacy preferences, informed by their lived experiences. In the latter part of this course, we will discuss special topics in human-centered privacy design and system building, including the privacy implications of emerging technologies (e.g., AI, XR), inclusive privacy design challenges, and engineering support for privacy by design.",Spring 2025,1800,2120,Monday,[]
40548,Boston,Topic: ResHumanCntrdNLP,CS6983,"Yun, Hye Sun","Offers various topics in computer science. May be repeated once. Section information text: Topic: Research in Human-Centered NLP Course Description: This course aims to provide a human-centered perspective toward modern language technologies and highlights research topics shared between Human-Computer Interactions (HCI) and Natural Language Processing (NLP). In this course, you will learn and apply research methods for designing and developing human-centered NLP applications and systems. In the process, you will practice HCI research methods to design user-centered language technologies or interactive systems in a capstone project. As part of the course, you will read research papers at the intersection of NLP and HCI and practice critically evaluating them to identify future research directions. The course should help students gain the skills and confidence to pursue research at the intersection of HCI and NLP.",Spring 2025,1450,1630,"Monday, Wednesday",[]
41675,Boston,Tp:Intro to Offsec Development,CS6983,"Bernardini, Kai","Offers various topics in computer science. May be repeated once. Section information text: The class introduces students to the wild world of offensive capabilities development and cyber threat hunting by taking on the role of both attacker and defender to better understand various stages of cyber attacks. Focusing on aarch64 Linux, students will create and analyze malware in the context of combating a simulated threat actor APT-Ch0nkyBear in addition to creating their own tools to emulate the fictional APT's capabilities. As an experimental feature this year, students will also practice hacking by attempting to hack the hackers-- you will be writing and deploying capabilities to gather information about ""compromised"" APT-Ch0nky Bear Infrastructure. The course culminates in a final project with the goal of developing production ready implant and command and control server targeting raspberry pi model >=4.",Spring 2025,1800,2120,Wednesday,[]
39809,Boston,Advanced Machine Learning,CS7140,"Zhang, Hongyang","Covers topics in advanced machine learning. Presents materials in the current machine learning literature. Focuses on graphical models, latent variable models, Bayesian inference, and nonparametric Bayesian methods. Seeks to prepare students to do research in machine learning. Expects students to read conference and journal articles, present these articles, and write an individual research paper. CS 7140 and EECE 7397 are cross-listed.",Spring 2025,1450,1630,"Monday, Wednesday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '6140'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '7204'}, {'and_or': 'Or', 'subject': 'Electrical and Comp Engineerng', 'course_number': '7313'}]"
37072,Boston,Deep Learning,CS7150,"Jiang, Huaizu","Introduces deep learning, including the statistical learning framework, empirical risk minimization, loss function selection, fully connected layers, convolutional layers, pooling layers, batch normalization, multilayer perceptrons, convolutional neural networks, autoencoders, U-nets, residual networks, gradient descent, stochastic gradient descent, backpropagation, autograd, visualization of neural network features, robustness and adversarial examples, interpretability, continual learning, and applications in computer vision and natural language processing. Assumes students already have a basic knowledge of machine learning, optimization, linear algebra, and statistics.",Spring 2025,1145,1325,"Wednesday, Friday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '6140'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '5220'}]"
40750,"Silicon Valley, CA",Deep Learning,CS7150,"Yoon, Ilmi","Introduces deep learning, including the statistical learning framework, empirical risk minimization, loss function selection, fully connected layers, convolutional layers, pooling layers, batch normalization, multilayer perceptrons, convolutional neural networks, autoencoders, U-nets, residual networks, gradient descent, stochastic gradient descent, backpropagation, autograd, visualization of neural network features, robustness and adversarial examples, interpretability, continual learning, and applications in computer vision and natural language processing. Assumes students already have a basic knowledge of machine learning, optimization, linear algebra, and statistics.",Spring 2025,1100,1420,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '6140'}, {'and_or': 'Or', 'subject': 'Data Science', 'course_number': '5220'}]"
39813,Boston,Intensive Principles of Programming Languages,CS7400,"Shivers III, Olin","Studies the basic components of programming languages, specification of syntax and semantics, and description and implementation of programming language features. Discusses examples from a variety of languages.",Spring 2025,1635,1740,"Monday, Wednesday, Thursday",[]
40072,Boston,Seminar in Programming Languages,CS7470,"Ahmed, Amal",Gives students the opportunity to read and present various survey and research papers in programming languages. Faculty supervisor and topics vary from semester to semester. May be repeated three times for a maximum of 16 total semester hours.,Spring 2025,1450,1630,Thursday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5400'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7400'}]"
40752,"Vancouver, Canada",SpTp:Community Driven SE,CS7580,"Coady, Monica",Offers various topics on software engineering. May be repeated up to two times.,Spring 2025,1045,1245,Thursday,[]
41638,"Silicon Valley, CA",Special Topics in Software Engineering,CS7580,"Coady, Monica",Offers various topics on software engineering. May be repeated up to two times. Section information text: Livecast from the Vancouver campus; hybrid section,Spring 2025,1045,1245,Thursday,[]
41471,"Oakland, CA",SpTp:Community Driven SE,CS7580,"Coady, Monica",Offers various topics on software engineering. May be repeated up to two times. Section information text: Livecast from Vancouver campus; hybrid section,Spring 2025,1045,1245,Thursday,[]
39816,Online,Special Topics in Theoretical Computer Science,CS7880,"Viola, Emanuele","Covers various topics including advanced cryptography, approximation algorithms, complexity theory, computational algebra, distributed computing, formal verification, network algorithms, online computation, parallel computing, and randomness and computation. May be repeated up to two times.",Spring 2025,,,,[]
40577,"Portland, Maine",Special Topics in Theoretical Computer Science,CS7880,"Jamieson, Alan","Covers various topics including advanced cryptography, approximation algorithms, complexity theory, computational algebra, distributed computing, formal verification, network algorithms, online computation, parallel computing, and randomness and computation. May be repeated up to two times.",Spring 2025,0900,1220,Monday,[]
40762,"Vancouver, Canada",Research Capstone,CS7980,"Akhmetov, Ildar","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1515,1715,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
40930,"Seattle, WA",Research Capstone,CS7980,"Nascimento, Mario","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program. Section information text: Livecast from the Vancouver campus; hybrid section",Spring 2025,1730,1930,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
40753,"Silicon Valley, CA",Research Capstone,CS7980,"Lee, Jeongkyu","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1100,1420,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
40763,"Vancouver, Canada",Research Capstone,CS7980,"Nascimento, Mario","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1730,1930,Wednesday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
40764,"Vancouver, Canada",Research Capstone,CS7980,"Imran, Hazra","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1515,1715,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
40765,"Vancouver, Canada",Research Capstone,CS7980,"Mohan, Aanchan","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1515,1715,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
37842,"Oakland, CA",Research Capstone,CS7980,"Fuentes-Cabrera, Miguel","Offers students a culminating experience to demonstrate proficiency in key concepts learned throughout their programs in the core and elective courses. Designed to reinforce concepts in ethics and basic concepts in research, beyond an emphasis on the technical principles learned throughout the program.",Spring 2025,1500,1820,Monday,"[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5004'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5010'}, {'and_or': 'And', 'subject': 'Computer Science', 'course_number': '5800'}]"
41366,"No campus, no room needed",Master&amp;#8217;s Project,CS8674,"Intille, Stephen",Offers selected work with the agreement of a project supervisor. May be repeated once.,Spring 2025,,,,[]
41411,"No campus, no room needed",Master&amp;#8217;s Project,CS8674,"Winslow, Raimond",Offers selected work with the agreement of a project supervisor. May be repeated once.,Spring 2025,,,,[]
41721,"No campus, no room needed",Master&amp;#8217;s Project,CS8674,"Maxwell, Bruce",Offers selected work with the agreement of a project supervisor. May be repeated once.,Spring 2025,,,,[]
37699,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Sathyanarayana, Aarti",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37700,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Shelat, Abhi",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37701,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Lerner, Ada",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
39814,Boston,Seminar in Computer Networks,CS7770,"Choffnes, David",Gives students the opportunity to read and present various survey and research papers in computer networks. Faculty supervisor and topics vary from semester to semester. May be repeated for credit for PhD students.,Spring 2025,1145,1325,"Monday, Thursday",[]
39815,Boston,Advanced Algorithms,CS7800,"Behnezhad, Soheil","Presents advanced mathematical techniques for designing and analyzing computer algorithms. Reviews some of the material covered in CS 5800 and then covers advanced topics. Emphasizes theoretical underpinnings of techniques used to solve problems arising in diverse domains. Topics include asymptotic analysis, advanced data structures, dynamic programming, greedy algorithms and matroid theory, amortized analysis, randomization, string matching, algebraic algorithms, and approximation algorithms. Introduces Turing machines, P and NP classes, polynomial-time reducibility, and NP completeness.",Spring 2025,0950,1130,"Tuesday, Friday",[]
40489,Boston,Foundations of Cryptography,CS7810,"Wichs, Daniel","Offers students at the PhD level an accelerated introduction to cryptography and quickly progresses to advanced topics that are at the forefront of current research. Cryptography is the science of protecting information against adversarial eavesdropping and tampering. Examines what kind of security properties can be achieved by relying solely on probability and information theory, without restricting the adversary’s computational power. Studies the complexity-theoretic basis of modern cryptography and the connection between computational hardness and pseudo-randomness. Explores, as the main component of the course, how to take a few well-studied problems in number theory and algebra and use them to build powerful cryptosystems with advanced functionality and security properties. Requires prior completion of an undergraduate course in the theory of computation.",Spring 2025,1145,1325,"Monday, Thursday",[]
37061,Boston,Seminar in Theoretical Computer Science,CS7870,"Perea Benitez, Jose Andres",Gives students the opportunity to read and present various survey and research papers in theoretical computer science. Faculty supervisor and topics vary from semester to semester. May be repeated three times for a maximum of 16 total semester hours.,Spring 2025,1635,1740,"Monday, Wednesday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
37062,Boston,Seminar in Theoretical Computer Science,CS7870,"Ullman, Jonathan",Gives students the opportunity to read and present various survey and research papers in theoretical computer science. Faculty supervisor and topics vary from semester to semester. May be repeated three times for a maximum of 16 total semester hours.,Spring 2025,1145,1325,"Monday, Thursday","[{'and_or': '', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '5800'}, {'and_or': 'Or', 'subject': 'Computer Science', 'course_number': '7800'}]"
37702,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Mislove, Alan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37703,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"To, Alexandra",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37706,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Oprea, Alina",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37707,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Ahmed, Amal",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37708,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Guha, Arjun",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37709,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Wallace, Byron",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37711,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Brodley, Carla",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37710,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Harteveld, Casper",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37712,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Tan, Cheng",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37713,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Amato, Christopher",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37714,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Martens, Christopher",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37715,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Scott, Cody",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37716,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Nita-Rotaru, Cristina",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37717,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Wang, Dakuo",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37718,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Wichs, Daniel",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37719,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Bau, David",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37720,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Rosen, David",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37721,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Smith, David",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37722,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Erdogmus, Deniz",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37723,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Elhamifar, Ehsan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37724,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Mynatt, Elizabeth",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37725,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Viola, Emanuele",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37726,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Mingolla, Ennio",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37727,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Bertini, Enrico",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37728,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Tip, Frank",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37729,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Cooperman, Gene",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37730,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Singh, Hanumant",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37731,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Zhang, Hongyang",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37732,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Jiang, Huaizu",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37733,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Nguyen, Huy",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37734,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Vitek, Jan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37735,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Van De Meent, Jan-Willem",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37736,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Aslam, Javed",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37737,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Shin, Ji Yong",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37738,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Bell, Jonathan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37739,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Ullman, Jonathan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37740,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Perea Benitez, Jose Andres",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37741,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Wong, Lok Sang",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37742,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Derakhshan, Mahsa",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37743,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Das, Maitraye",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37744,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Alikhani, Malihe",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37745,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Felleisen, Matthias",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37746,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Santillana Guzman, Mauricio",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37747,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Hofmann, Megan",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
37748,"No campus, no room needed",Research Work Experience - Half-Time,CS8948,"Tory, Melanie",Provides an opportunity for all doctoral students to engage in industry research in the area of their dissertation. Doctoral students register for this course before starting their off-campus internship. May be repeated up to five times.,Spring 2025,,,,[]
